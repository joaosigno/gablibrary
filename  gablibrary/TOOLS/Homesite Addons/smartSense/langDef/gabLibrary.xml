<?xml version="1.0"?>
<root><elements><el><display>CustomLib</display><insert>custom</insert><childElements><el type="m"><display>establishDatabaseConnection(connStr)</display><insert>establishDatabaseConnection(connStr)</insert><help>Method for makeDbConnection of page-class</help></el><el type="m"><display>switchToDB(connStr)</display><insert>switchToDB(connStr)</insert><help>If you want to switch from the default database to another. Or just if you want to
switch to another database. It closes the current connection and opens the new one. Remember
the DB-connection object "lib.databaseConnection" will be closed at the end of every page.</help></el><el type="m"><display>userLoggedIn()</display><insert>userLoggedIn()</insert><help>Checks if visitor is logged in or not.</help></el><el type="m"><display>accessDuringMaintenance()</display><insert>accessDuringMaintenance()</insert><help>Do someone has access to the site although maintenance work is going on.</help></el><el type="m"><display>logError(aErrorHandler)</display><insert>logError(aErrorHandler)</insert><help>Logs error from errorHandler-class.</help></el><el type="m"><display>isWebadmin()</display><insert>isWebadmin()</insert><help>returns true if the logged in user is a webadmin.</help></el><el type="m"><display>logAndForget(identification, logMessage)</display><insert>logAndForget(identification, logMessage)</insert><help>Does a simple log using the Logger-class</help></el><el type="m"><display>getDatePickerJsCall(affectedField, minimumAllowedDate, maximumAllowedDate, additionalJS)</display><insert>getDatePickerJsCall(affectedField, minimumAllowedDate, maximumAllowedDate, additionalJS)</insert><help>Gets the Javascript call which will be executed by clicking on the datePickerButton. Usable if you
want to show the dialog by clicking on the affectedField</help></el><el type="m"><display>drawDatePickerButton(affectedField, minimumAllowedDate, maximumAllowedDate, additionalJS)</display><insert>drawDatePickerButton(affectedField, minimumAllowedDate, maximumAllowedDate, additionalJS)</insert><help>Draws an image-button where the user can click on and pick a date</help></el><el type="m"><display>toCustomDateFormat(dateToFormat)</display><insert>toCustomDateFormat(dateToFormat)</insert><help>Formats a date to a custom date format</help></el><el type="m"><display>toDBDateFormat(dateToFormat)</display><insert>toDBDateFormat(dateToFormat)</insert><help>formats a date that in can be used within SQL-queries.</help></el><el type="m" obsolete="1"><display>forceZeros(num, digits)</display><insert>forceZeros(num, digits)</insert><help>OBSOLETE! use str.padLeft instead</help></el><el type="m"><display>displayDateformat(dat, mode, linguisticMode)</display><insert>displayDateformat(dat, mode, linguisticMode)</insert><help>formats a full date into several views</help></el><el type="m"><display>drawInfo(title, msg)</display><insert>drawInfo(title, msg)</insert><help>draws an info field with a tooltip.</help></el><el type="m"><display>formatLocation(countryAbbrev, zip, city)</display><insert>formatLocation(countryAbbrev, zip, city)</insert><help>formats a location. city, country and zip</help></el><el type="m"><display>formatName(title, firstname, lastname)</display><insert>formatName(title, firstname, lastname)</insert><help>formats a name of a person</help></el><el type="m"><display>isValidPhoneFormat(value)</display><insert>isValidPhoneFormat(value)</insert><help>Checks if phone number meets required format</help></el><el type="p"><display>phoneFormat</display><insert>phoneFormat</insert><help>GET: undefined</help></el></childElements></el><el><display>ArrayList</display><insert>&lt;!--#include virtual="/gab_Library/class_arrayList/arrayList.asp"--&gt;</insert><childElements><el type="m"><display>toString(seperator)</display><insert>toString(seperator)</insert><help>Returns the array as string, seperated by the "seperator"</help></el><el type="m"><display>toArray()</display><insert>toArray()</insert><help>Returns the array</help></el><el type="m"><display>swap(indexFirst, indexSecond)</display><insert>swap(indexFirst, indexSecond)</insert><help>Swap two values in the arrayList</help></el><el type="m"><display>reverse()</display><insert>reverse()</insert><help>Reverse the items in the arrayList</help></el><el type="m"><display>indexOf(val)</display><insert>indexOf(val)</insert><help>Returns the array-index of the first string occurency</help></el><el type="m"><display>item(pos)</display><insert>item(pos)</insert><help>Get the value of an existing item</help></el><el type="m"><display>setItem(pos, val)</display><insert>setItem(pos, val)</insert><help>Change the value of an existing item</help></el><el type="m"><display>clear()</display><insert>clear()</insert><help>Clears the array</help></el><el type="m"><display>addRange(obj)</display><insert>addRange(obj)</insert><help>Adds an array, or string to the arrayList</help></el><el type="m"><display>add(val)</display><insert>add(val)</insert><help>Adds an item to the arrayList</help></el><el type="m"><display>contains(val)</display><insert>contains(val)</insert><help>Determines if a value exists in the arraylist</help></el><el type="p"><display>items</display><insert>items</insert><help>GET: [int] gets the number of items in the list. begins with 0 (0 items in the list)</help></el><el type="p"><display>count</display><insert>count</insert><help>GET: [int] gets the amount of items beginning with 0. -1 = NULL</help></el></childElements></el><el><display>Cache</display><insert>&lt;!--#include virtual="/gab_Library/class_cache/cache.asp"--&gt;</insert><childElements><el type="m"><display>getItem(identifier)</display><insert>getItem(identifier)</insert><help>gets an item from the cache.</help></el><el type="m"><display>clear()</display><insert>clear()</insert><help>clears the cache.</help></el><el type="m"><display>store(identifier, item)</display><insert>store(identifier, item)</insert><help>stores an item into the cache. if it already exists then it gets overwritten</help></el><el type="p"><display>maxItemSize</display><insert>maxItemSize</insert><help>[string] the maximum size in bytes of an item which will be cached. all items with a size
bigger than this value wont be cached (saving memory on the server). default = 100000
works only if the items are no objects and no arrays</help></el><el type="p"><display>maxSlots</display><insert>maxSlots</insert><help>[string] the maximum amount of slots for caching items. default = 10</help></el><el type="p"><display>intervalValue</display><insert>intervalValue</insert><help>[string] which value of the interval. default = 1</help></el><el type="p"><display>interval</display><insert>interval</insert><help>[string] what interval is used to define the expiration of the items. default = h (hour)
allowed values are all values which can be used with dateadd() function. e.g. m = month, etc.</help></el><el type="p"><display>name</display><insert>name</insert><help>[string] name of the cache you want to create. normally a word which describes what it is caching</help></el></childElements></el><el><display>Calculator</display><insert>&lt;!--#include virtual="/gab_Library/class_calculator/calculator.asp"--&gt;</insert><childElements><el type="m"><display>addCustomButton(buttonObj)</display><insert>addCustomButton(buttonObj)</insert><help>Adds an custombutton to the calculator.</help></el><el type="m"><display>draw()</display><insert>draw()</insert><help>Draws the calculator-control. page must be a modal!</help></el><el type="p"><display>cssLocation</display><insert>cssLocation</insert><help>[string] virtual path to the stylesheet which is used by the calculator. defualt taken from config.asp</help></el><el type="p"><display>commaStyle</display><insert>commaStyle</insert><help>[string] whats the style of the comma. default is ","</help></el><el type="p"><display>displayedValue</display><insert>displayedValue</insert><help>[string] the value which should be displayed when the calculator is being loaded</help></el><el type="p"><display>defaultStylesheet</display><insert>defaultStylesheet</insert><help>[bool] use the default styles for this control. default = true</help></el><el type="p"><display>JSTarget</display><insert>JSTarget</insert><help>[string] the target of the field you want to input the calculated value. e.g: frm.commonField</help></el></childElements></el><el><display>CalculatorButton</display><insert>&lt;!--#include virtual="/gab_Library/class_calculator/class_calculatorButton.asp"--&gt;</insert><childElements><el type="m"><display>draw()</display><insert>draw()</insert><help>Draws the button</help></el><el type="p"><display>customButton</display><insert>customButton</insert><help>[bool] is this a custom-button? default=true</help></el><el type="p"><display>buttonID</display><insert>buttonID</insert><help>[string] id of the button. leave empty if custom-button</help></el><el type="p"><display>cssClass</display><insert>cssClass</insert><help>[string] CssClass for the button</help></el><el type="p"><display>onClick</display><insert>onClick</insert><help>[string] JS function which should be called onClick. Leave empty if custom-button</help></el><el type="p"><display>value</display><insert>value</insert><help>[string] what value should the button stand for</help></el><el type="p"><display>toolTip</display><insert>toolTip</insert><help>[string] tooltip for the button</help></el><el type="p"><display>caption</display><insert>caption</insert><help>[string] caption which will be displayed on the button</help></el></childElements></el><el><display>Calendar</display><insert>&lt;!--#include virtual="/gab_Library/class_calendar/calendar.asp"--&gt;</insert><childElements><el type="m"><display>isWeekend(aWeekday)</display><insert>isWeekend(aWeekday)</insert><help>checks if a given weekday lies on a weekend</help></el><el type="m"><display>addDayMenuSeperator()</display><insert>addDayMenuSeperator()</insert><help>Adds a seperator to the dayMenu</help></el><el type="m"><display>addDayMenuitem(dayMenuitemObject)</display><insert>addDayMenuitem(dayMenuitemObject)</insert><help>Adds a menuitem to the daymenu</help></el><el type="m"><display>draw()</display><insert>draw()</insert><help>Draws the calendar</help></el><el type="p"><display>getFirstDay</display><insert>getFirstDay</insert><help>GET: [date] the first day, e.g. of the week</help></el><el type="p"><display>currentView</display><insert>currentView</insert><help>GET: [calendarday-enum] gets the currentView</help></el><el type="p"><display>onPreDayCreated</display><insert>onPreDayCreated</insert><help>[sub] implement this function to have access to a day before it gets drawn (has byRef calendarDay as parameter)
 Note: do not draw anything here !! Only do calculations and assigning here</help></el><el type="p"><display>cssLocation</display><insert>cssLocation</insert><help>[string] the path and file name to the css file. Gets the default from the config.asp</help></el><el type="p"><display>enableWeekends</display><insert>enableWeekends</insert><help>[bool] show the weekends? defualt = true</help></el><el type="p"><display>timeline</display><insert>timeline</insert><help>[bool] show timeline. currently only in day-view. default = false</help></el><el type="p"><display>runningClock</display><insert>runningClock</insert><help>[bool] should the clock be automatically running? default = true</help></el><el type="p"><display>showClock</display><insert>showClock</insert><help>[bool] show-clock on todays day? default = true</help></el><el type="p"><display>enabledCalendarViews</display><insert>enabledCalendarViews</insert><help>[binary] which calendarviews are allowed. Use logical connection of the calendarview-enum
e.g. CALENDARVIEW_DAY or CALENDARVIEW_MONTH enables month and day view. default = all views</help></el><el type="p"><display>selectedDate</display><insert>selectedDate</insert><help>[date] which date should be selected. If nothing given then today-date will be displayed</help></el><el type="p"><display>defaultStylesheet</display><insert>defaultStylesheet</insert><help>[bool] use the default styles for this control. default = true</help></el><el type="p"><display>defaultView</display><insert>defaultView</insert><help>[calendarday-enum] what view should be shown by defualt?
CALENDARVIEW_DAY, CALENDARVIEW_WEEK, CALENDARVIEW_MONTH</help></el></childElements></el><el><display>CalendarDay</display><insert>&lt;!--#include virtual="/gab_Library/class_calendar/class_calendarDay.asp"--&gt;</insert><childElements><el type="m"><display>getWeekdayName()</display><insert>getWeekdayName()</insert><help>gets the name of the weekday. e.g. Monday</help></el><el type="m"><display>getHolidayName()</display><insert>getHolidayName()</insert><help>gets the holidayname if it is a holiday. useful in combination with isHoliday()</help></el><el type="m"><display>isHoliday()</display><insert>isHoliday()</insert><help>indicates if the date is a holiday</help></el><el type="m"><display>getWeekOfTheYear()</display><insert>getWeekOfTheYear()</insert><help>gets the week of the year the date is in</help></el><el type="m"><display>isBeforeToday()</display><insert>isBeforeToday()</insert><help>indicates if the date is before todays date</help></el><el type="m"><display>isToday()</display><insert>isToday()</insert><help>indicates if the date is Today</help></el><el type="m"><display>isWeekend()</display><insert>isWeekend()</insert><help>indicates if the date lies on a weekend or not</help></el><el type="p"><display>dat</display><insert>dat</insert><help>GET: [date] gets the date
SET: [date] sets the date</help></el><el type="p"><display>HLattributes</display><insert>HLattributes</insert><help>[string] head line attributes (used in the month view for the monthDayText Div)</help></el><el type="p"><display>attributes</display><insert>attributes</insert><help>[string] attributes for the calendar day (e.g. in the month view the attribute for the whole day cell)</help></el><el type="p"><display>index</display><insert>index</insert><help>[int] index of the day in the calendar. example: weekview has 7 days so
the first day has index 0 and last day index 6.</help></el></childElements></el><el><display>DayMenuitem</display><insert>&lt;!--#include virtual="/gab_Library/class_calendar/class_dayMenuitem.asp"--&gt;</insert><childElements><el type="m"><display>draw()</display><insert>draw()</insert><help></help></el><el type="p"><display>hoverEffect</display><insert>hoverEffect</insert><help>[bool] enable/disable mousehover. default=true</help></el><el type="p"><display>disabled</display><insert>disabled</insert><help>[bool] disabled or not. default=false</help></el><el type="p"><display>onClick</display><insert>onClick</insert><help>[string] what should be executed onclick</help></el><el type="p"><display>toolTip</display><insert>toolTip</insert><help>[string] tooltip</help></el><el type="p"><display>caption</display><insert>caption</insert><help>[string] caption of the menuitem</help></el></childElements></el><el><display>CharCounter</display><insert>&lt;!--#include virtual="/gab_Library/class_charCounter/charCounter.asp"--&gt;</insert><childElements><el type="m"><display>executeJS()</display><insert>executeJS()</insert><help></help></el><el type="m"><display>drawCounter()</display><insert>drawCounter()</insert><help></help></el><el type="m"><display>drawControl()</display><insert>drawControl()</insert><help></help></el><el type="m"><display>allocateControl(controlObj)</display><insert>allocateControl(controlObj)</insert><help></help></el><el type="p"><display>iAmNotAlone</display><insert>iAmNotAlone</insert><help>true/false - if you use more than one charCounter in your Site then you should
set only the first on false and all other on true. Just one Javascript function
will be placed in your document.</help></el><el type="p"><display>barLength</display><insert>barLength</insert><help>The length of you counter-bar.</help></el><el type="p"><display>maxChars</display><insert>maxChars</insert><help>The amount of maximum allowed chars.</help></el></childElements></el><el><display>CharCounterTextarea</display><insert>&lt;!--#include virtual="/gab_Library/class_charCounter/charCounterTextarea.asp"--&gt;</insert><childElements><el type="m"><display>draw()</display><insert>draw()</insert><help></help></el><el type="p"><display>formName</display><insert>formName</insert><help>Name of the form</help></el><el type="p"><display>disabled</display><insert>disabled</insert><help>true/false</help></el><el type="p"><display>value</display><insert>value</insert><help>You have a value for it?</help></el><el type="p"><display>attributes</display><insert>attributes</insert><help>If you want to add some Attributes yourself. e.g. style="...."</help></el><el type="p"><display>rows</display><insert>rows</insert><help>How many Rows</help></el><el type="p"><display>cols</display><insert>cols</insert><help>How nany Columns</help></el><el type="p"><display>name</display><insert>name</insert><help>Name of the textarea</help></el></childElements></el><el><display>CharCounterTextfield</display><insert>&lt;!--#include virtual="/gab_Library/class_charCounter/charCounterTextfield.asp"--&gt;</insert><childElements><el type="m"><display>draw()</display><insert>draw()</insert><help></help></el><el type="p"><display>formName</display><insert>formName</insert><help>Name of the form</help></el><el type="p"><display>disabled</display><insert>disabled</insert><help>true/false</help></el><el type="p"><display>value</display><insert>value</insert><help>You have a value for it?</help></el><el type="p"><display>attributes</display><insert>attributes</insert><help>If you want to add some Attributes yourself. e.g. style="...."</help></el><el type="p"><display>name</display><insert>name</insert><help>Name of the textfield</help></el></childElements></el><el><display>Constants</display><insert>consts</insert><childElements><el type="m"><display>isDevelopment()</display><insert>isDevelopment()</insert><help>Tells if site is running on development server or not</help></el><el type="m"><display>STDAPP(filename)</display><insert>STDAPP(filename)</insert><help>gets a full virtual path for a file from the standard application.</help></el><el type="p"><display>allowed_on_maintenance</display><insert>allowed_on_maintenance</insert><help>GET: [array] Retuns an array with the IP-addresses which are allowed to view the page during maintanance work.</help></el><el type="p"><display>webadmins</display><insert>webadmins</insert><help>GET: [array] Retuns a 2 dimensional array with the Webadmins. 1st column is the name 2nd column is the email of the webadmin, 3rd column the userid.</help></el><el type="p"><display>maintenance_work</display><insert>maintenance_work</insert><help>GET: [bool] Returns if maintanance work is enabled or disabled</help></el><el type="p"><display>email_send_on_error</display><insert>email_send_on_error</insert><help>GET: [bool] Returns if there will be email sending on errors.</help></el><el type="p"><display>automated_bot_name</display><insert>automated_bot_name</insert><help>GET: [string] Returns the Email of the Automated Bot. e.g. used for email sending as sender.</help></el><el type="p"><display>automated_bot_email</display><insert>automated_bot_email</insert><help>GET: [string] Returns the Name of the Automated Bot. e.g. used for email sending as sender.</help></el><el type="p"><display>logoSmall</display><insert>logoSmall</insert><help>GET: [string] Returns the Path to the SMALL company-Logo.</help></el><el type="p"><display>logo</display><insert>logo</insert><help>GET: [string] Returns the Path to the company-Logo.</help></el><el type="p"><display>smtp_server</display><insert>smtp_server</insert><help>GET: [string] Returns the SMTP-server</help></el><el type="p"><display>hostIP</display><insert>hostIP</insert><help>GET: [string] Returns the IP-address of the host</help></el><el type="p"><display>loginPageUrl</display><insert>loginPageUrl</insert><help>GET: [string] gets the URL of the loginpage. {0} placeholder will be replaced by the requested URL</help></el><el type="p"><display>domain</display><insert>domain</insert><help>GET: [string] 'Thats the URL of the machine where all these files are located. e.g. http://inside.me.com</help></el><el type="p"><display>NA</display><insert>NA</insert><help>GET: [string] Returns a string which will indicates "no data available"</help></el><el type="p"><display>userFiles</display><insert>userFiles</insert><help>GET: [string] gets the virtual path to the user files. user files are file uploaded by the user or modified by the user</help></el><el type="p"><display>company_name</display><insert>company_name</insert><help>GET: [string] Returns the Companies name</help></el><el type="p"><display>logs_path</display><insert>logs_path</insert><help>GET: [string] Returns the path to the logs</help></el><el type="p"><display>liveServerName</display><insert>liveServerName</insert><help>GET: [string] Returns the server-name of the live-webServer</help></el><el type="p"><display>gabLibConfigLocation</display><insert>gabLibConfigLocation</insert><help>GET: [string] Returns the virtual path of the gabLibrary and ends with a slash (example: /gab_Library/)</help></el><el type="p"><display>gabLibLocation</display><insert>gabLibLocation</insert><help>GET: [string] Returns the virtual path of the gabLibrary and ends with a slash (example: /gab_Library/)</help></el><el type="p"><display>errorLogging</display><insert>errorLogging</insert><help>GET: [bool] should error logging be done?</help></el><el type="p"><display>onlyLiveServer</display><insert>onlyLiveServer</insert><help>GET: [bool] is the system configured only with a live system (there is no live/dev scenario). default = false</help></el></childElements></el><el><display>CreateDropdown</display><insert>&lt;!--#include virtual="/gab_Library/class_createDropdown/createDropdown.asp"--&gt;</insert><childElements><el type="m"><display>getAsString()</display><insert>getAsString()</insert><help></help></el><el type="m"><display>draw()</display><insert>draw()</insert><help></help></el><el type="m"><display>addDisplayField(field)</display><insert>addDisplayField(field)</insert><help></help></el><el type="m"><display>set_displayFunction(myFunction, param)</display><insert>set_displayFunction(myFunction, param)</insert><help></help></el><el type="p"><display>records</display><insert>records</insert><help>[recordset] recordset. you can access using displayfunction</help></el><el type="p"><display>enableAutosplit</display><insert>enableAutosplit</insert><help>[bool] prevent auto split if there is a ":" in your sql. e.g. if you have time-statements in your query</help></el><el type="p"><display>id</display><insert>id</insert><help>[string] The ID for the control. Displayed in the ID-Attribute</help></el><el type="p"><display>forceArray</display><insert>forceArray</insert><help>[bool] Sometimes you need to say its an array instead of sql query. e.g. just one value</help></el><el type="p"><display>rows</display><insert>rows</insert><help>[int] For multiple Dropdown. How many rows?</help></el><el type="p"><display>tdAddy</display><insert>tdAddy</insert><help>[string] if you want to add something yourself to the dropdown like style= width=,etc. It is quite the same as "onAttribute" property</help></el><el type="p"><display>isDisabled</display><insert>isDisabled</insert><help>[bool] dropdown will be disabled</help></el><el type="p"><display>fieldSeperator</display><insert>fieldSeperator</insert><help>[string] if you want to show more than one field per OPTION-tag you have the option to put a seperator in here</help></el><el type="p"><display>onAttribute</display><insert>onAttribute</insert><help>[string] if you want to execute e.g. a javascript onclick, onchange, etc. e.g. "onclick=</help></el><el type="p"><display>commonTxtVal</display><insert>commonTxtVal</insert><help>[string] Value for the commonTxtvalue. Default = 0</help></el><el type="p"><display>commonTxt</display><insert>commonTxt</insert><help>[string] just like "please select a value from the dropdown".</help></el><el type="p"><display>cssClass</display><insert>cssClass</insert><help>[string] if you have a cssclass put the name of the class in here.</help></el><el type="p"><display>isMultiple</display><insert>isMultiple</insert><help>[bool] multiple select dropdown</help></el><el type="p"><display>idToMatch</display><insert>idToMatch</insert><help>[string/array] what option(s) should be selected. if you want to select more options in a multiple dropdown you need to provide an array</help></el><el type="p"><display>name</display><insert>name</insert><help>[string] Name of the dropdown</help></el><el type="p"><display>pk</display><insert>pk</insert><help>[string] PrimaryKey. Will be shown as Value of every OPTION-tag. Must be available in the sql-Statement. If you use a ':' separated string as sql then PK also needs a ':' sperated string with the same amount of fields.</help></el><el type="p"><display>sqlquery</display><insert>sqlquery</insert><help>[string] The Sql-Query for the Dropdown. If you dont want an sql then enter a string sperated with ":"</help></el></childElements></el><el><display>CustomSendMail</display><insert>&lt;!--#include virtual="/gab_Library/class_customSendMail/customSendMail.asp"--&gt;</insert><childElements><el type="m"><display>addAttachment(fileName, isInline, contentType)</display><insert>addAttachment(fileName, isInline, contentType)</insert><help>Adds an attachment to the email-object. Use this method as often as you want to add attachments
to your email.</help></el><el type="m"><display>addRecipients(recipientType, emails)</display><insert>addRecipients(recipientType, emails)</insert><help>adds more than one recipient seperated by ";". Only email values. Name will be the email</help></el><el type="m"><display>addRecipient(toWhat, email, name)</display><insert>addRecipient(toWhat, email, name)</insert><help>Adds a recipient to the email-object. Use this method as often as you want to add recipients
To your email.</help></el><el type="m"><display>getRecipients()</display><insert>getRecipients()</insert><help>returns all recipients</help></el><el type="m"><display>clearRecipients()</display><insert>clearRecipients()</insert><help>Clears the recipients list</help></el><el type="m"><display>send()</display><insert>send()</insert><help>Sends the email</help></el><el type="p"><display>errormessage</display><insert>errormessage</insert><help>GET: Returns the errormessage</help></el><el type="p"><display>companyLayout</display><insert>companyLayout</insert><help>[bool] Add the company layout to HTML emails? Header and footer is in emailSettings.asp. Default = true</help></el><el type="p"><display>htmlEmail</display><insert>htmlEmail</insert><help>[bool] Should the body be HTML encoded? - Note: HTML and BODY-Tags are added to the content automatically,
so you dont need to provide these things. Start directly with your real content.</help></el><el type="p"><display>body</display><insert>body</insert><help>[string] Body of the email. If htmlEmail true then it should be html-code</help></el><el type="p"><display>fromName</display><insert>fromName</insert><help>[string] Senders Name. default = auto-bot-name from the constants</help></el><el type="p"><display>fromEmail</display><insert>fromEmail</insert><help>[string] Senders Email. default = auto-bot-email from the constants</help></el><el type="p"><display>subject</display><insert>subject</insert><help>[string] Email Subject</help></el></childElements></el><el><display>DatePicker</display><insert>&lt;!--#include virtual="/gab_Library/class_datePicker/datePicker.asp"--&gt;</insert><childElements><el type="m" obsolete="1"><display>isHoliday(theDate)</display><insert>isHoliday(theDate)</insert><help>OBSOLETE! Use dates.isHoliday instead (dates class)</help></el><el type="m"><display>formatDate(dateToFormat)</display><insert>formatDate(dateToFormat)</insert><help>Formats a date to an individual format.</help></el><el type="m"><display>draw()</display><insert>draw()</insert><help>Draws the datepicker-control</help></el><el type="p"><display>holidayName</display><insert>holidayName</insert><help>GET: [string] Returns the name of a holiday which were calculated through isHoliday-method</help></el><el type="p"><display>cssLocation</display><insert>cssLocation</insert><help>[string] the path and file name to the css file. Gets the default from the config.asp</help></el><el type="p"><display>useStringBuilder</display><insert>useStringBuilder</insert><help>[bool] use stringbuilder. default = true</help></el><el type="p"><display>autoDisableNavi</display><insert>autoDisableNavi</insert><help>[bool] should the navigation be disabled if the allowed date cannot be reached
e.g. if the previous month is not allowed the back-month-button will be disabled, etc.</help></el><el type="p"><display>minimumAllowedDate</display><insert>minimumAllowedDate</insert><help>[date] the minimum allowed date. if empty then every date is selectable to the lower-side</help></el><el type="p"><display>maximumAllowedDate</display><insert>maximumAllowedDate</insert><help>[date] the maximum allowed date. if empty then every date is selectable to the upper-side</help></el><el type="p"><display>JSTarget</display><insert>JSTarget</insert><help>[string] the target of the field you want to input the selected date. e.g: frm.date</help></el><el type="p"><display>autoResize</display><insert>autoResize</insert><help>[bool] automatically remove lines if there is no day of the selected month/year. default = false</help></el><el type="p"><display>shownYearRange</display><insert>shownYearRange</insert><help>[int] how many years should be displayed before/after the selected year? default = 50</help></el><el type="p"><display>selectedDate</display><insert>selectedDate</insert><help>[date] which date is selected. if no date is given then todays date will be selected</help></el><el type="p"><display>defaultStylesheet</display><insert>defaultStylesheet</insert><help>[bool] use the default styles for this control. default = true
if you want to implement your own styles then look at the classes in the standard.css</help></el><el type="p"><display>displayHolidays</display><insert>displayHolidays</insert><help>[bool] Highlight the holidays in the calendar. default = true</help></el><el type="p"><display>title</display><insert>title</insert><help>[string] The title which should be displayed on the calendar</help></el></childElements></el><el><display>Dates</display><insert>&lt;!--#include virtual="/gab_Library/class_dates/dates.asp"--&gt;</insert><childElements><el type="m"><display>isHoliday(theDate)</display><insert>isHoliday(theDate)</insert><help>Says if the given date is a holiday or not</help></el><el type="m"><display>isWeekend(aWeekday)</display><insert>isWeekend(aWeekday)</insert><help>checks if a given weekday is on a weekend</help></el><el type="m"><display>weekOfTheYear(myDate)</display><insert>weekOfTheYear(myDate)</insert><help>Returns the week of the year of the given date</help></el><el type="m"><display>getDaysInMonth(mth, yr)</display><insert>getDaysInMonth(mth, yr)</insert><help>Gets the number of days of a given month (e.g. 31 for january)</help></el><el type="m"><display>getLastDayOfTheMonth(currentDate)</display><insert>getLastDayOfTheMonth(currentDate)</insert><help>Gets the last day of a given date (e.g. 15.01.2006 returns 31</help></el><el type="m"><display>toMsSqlDateFormat(dat)</display><insert>toMsSqlDateFormat(dat)</insert><help></help></el><el type="p"><display>holidayName</display><insert>holidayName</insert><help>GET: [string] holds the name of the holiday after executing isHoliday()</help></el></childElements></el><el><display>DBUpdate</display><insert>&lt;!--#include virtual="/gab_Library/class_dbUpdate/dbUpdate.asp"--&gt;</insert><childElements><el type="m"><display>delete()</display><insert>delete()</insert><help></help></el><el type="m"><display>update()</display><insert>update()</insert><help></help></el><el type="m"><display>insert()</display><insert>insert()</insert><help></help></el><el type="m"><display>verifyFieldForDB(inputStr)</display><insert>verifyFieldForDB(inputStr)</insert><help></help></el><el type="m"><display>changeFieldValue(fieldname, functionToExecute)</display><insert>changeFieldValue(fieldname, functionToExecute)</insert><help></help></el><el type="m"><display>connection(obj)</display><insert>connection(obj)</insert><help></help></el><el type="p"><display>acceptNulls</display><insert>acceptNulls</insert><help>[bool] writes null into columns which allow nulls and the input is empty. default = falst</help></el><el type="p"><display>ignorePK</display><insert>ignorePK</insert><help>[bool] If the PK is not an AUTO-Value then you can use this property to allow updating the PK field</help></el><el type="p"><display>debuging</display><insert>debuging</insert><help>[bool] turns debugging on/off</help></el><el type="p"><display>verifyTxt</display><insert>verifyTxt</insert><help>[bool] Check text for &lt;BR&gt; and ' etc. VerfiyTextForDB-function from lib will be exectued on every field before updating.</help></el><el type="p"><display>pk</display><insert>pk</insert><help>[int] ID of the record to be updated. just needed for deleting and updating</help></el><el type="p"><display>pkName</display><insert>pkName</insert><help>[string] Name of the column in the specified table which is the primary-key-column</help></el><el type="p"><display>table</display><insert>table</insert><help>[string ]We need to know which table should be updated</help></el></childElements></el><el><display>DebuggingConsole</display><insert>&lt;!--#include virtual="/gab_Library/class_debuggingConsole/debuggingConsole.asp"--&gt;</insert><childElements><el type="m"><display>draw()</display><insert>draw()</insert><help></help></el><el type="m"><display>grabDatabaseInfo(oSQLDB)</display><insert>grabDatabaseInfo(oSQLDB)</insert><help></help></el><el type="m"><display>print(label, output)</display><insert>print(label, output)</insert><help></help></el><el type="p"><display>allvars</display><insert>allvars</insert><help>GET: [bool] Gets if all variables will be displayed.
SET: [bool] Sets wheather all variables will be displayed or not. true/false</help></el><el type="p"><display>show</display><insert>show</insert><help>GET: [string] Gets the debugging panel.
SET: [string] Sets the debugging panel. Where each digit in the string represents a debug information pane in order (11 of them). 1=open, 0=closed</help></el><el type="p"><display>enabled</display><insert>enabled</insert><help>GET: [bool] Gets the "enabled" value
SET: [bool] Sets "enabled" to true or false</help></el></childElements></el><el><display>DocumentHolder</display><insert>&lt;!--#include virtual="/gab_Library/class_documentHolder/documentHolder.asp"--&gt;</insert><childElements><el type="m"><display>perform()</display><insert>perform()</insert><help>performs the actions of the control. delete, upload, etc.</help></el><el type="m"><display>draw()</display><insert>draw()</insert><help>Draws the control</help></el><el type="p"><display>onDelete</display><insert>onDelete</insert><help>[string] name of the SUB which will be executed when the user wants to delete the file.
e.g. you want to update your database</help></el><el type="p"><display>uploader</display><insert>uploader</insert><help>[fileUpload] the fileUploader associated with the documentHolder. set the properties
like targetpath, etc. in order to define how the upload will be handled.</help></el><el type="p"><display>autoHandleFileTypes</display><insert>autoHandleFileTypes</insert><help>[bool] a value indicating wheter the displaying of the file types should be handled automatic.
e.g. Images will be displayed in a nice box, text files will be opened in a new window, ...
if false all files will be displayed in a new browser window</help></el><el type="p"><display>cssLocation</display><insert>cssLocation</insert><help>[string] location of the stylesheet file. by default it is taken from the config.asp</help></el><el type="p"><display>deleteCaption</display><insert>deleteCaption</insert><help>[string] the description of the text standing next to the checkbox (e.g. Delete)</help></el><el type="p"><display>value</display><insert>value</insert><help>[string] name of the file which will be displayed. path is taken from the uploader. e.g. hugo.jpg</help></el><el type="p"><display>name</display><insert>name</insert><help>[string] the name of the control</help></el></childElements></el><el><display>ColumnCommon</display><insert>&lt;!--#include virtual="/gab_Library/class_drawtable/class_columnCommon.asp"--&gt;</insert><childElements><el type="p"><display>isFiltered</display><insert>isFiltered</insert><help>[bool] indicates if a "basic" filter will be added automaically with this column.
just a standard textbox filter. default = false</help></el><el type="p"><display>disableLink</display><insert>disableLink</insert><help>[bool] - if true then column will be without link (not clickable). addurl/addurljs members of
drawtable will be ignored. you can make your own links then</help></el><el type="p"><display>isNumber</display><insert>isNumber</insert><help>[bool] - is this a column with numbers?</help></el><el type="p"><display>COLType</display><insert>COLType</insert><help>Dont touch this!</help></el><el type="p"><display>headerTdAttributes</display><insert>headerTdAttributes</insert><help>TD-Attributes for the TD the sort is in.</help></el><el type="p"><display>tdAttributes</display><insert>tdAttributes</insert><help>TD-Attributes for every TD in this column. e.g: width=20</help></el><el type="p"><display>displayFunction</display><insert>displayFunction</insert><help>Name of the FUNCTION (return the input!) you want to execute on the column.
e.g. if you choose "checkme" as display-function you will need to write your own function
named "checkme" including one parameter. This parameter is always the current value of the field.</help></el><el type="p"><display>displayString</display><insert>displayString</insert><help>The name displayed in the header of the table for this column.</help></el><el type="p"><display>fieldName</display><insert>fieldName</insert><help>Name of the filed in the sql-query. So you see every field must be available in your sql-query!</help></el></childElements></el><el><display>ColumnFilter</display><insert>&lt;!--#include virtual="/gab_Library/class_drawtable/class_columnFilter.asp"--&gt;</insert><childElements><el type="p"><display>inputAttributes</display><insert>inputAttributes</insert><help>[string] Attributes for the input field. e.g. readonly, onclick='...', etc.</help></el><el type="p"><display>commaStyle</display><insert>commaStyle</insert><help>[string] You can choose how the comma looks like</help></el><el type="p"><display>tdAttributes</display><insert>tdAttributes</insert><help>[string] You have access to the TD the filter will be placed in. e.g. align=center</help></el><el type="p"><display>description</display><insert>description</insert><help>[string] Leave it blank to use the default description.</help></el><el type="p"><display>fieldToMatch</display><insert>fieldToMatch</insert><help>[string] If the field you want to match differs from the fieldName then write it here.</help></el><el type="p"><display>defaultSelect</display><insert>defaultSelect</insert><help>[string] You can set a default value to set the filter.</help></el><el type="p"><display>displayField</display><insert>displayField</insert><help>[string] The name of the field should be displayed.</help></el><el type="p"><display>primaryKey</display><insert>primaryKey</insert><help>[string] What field should be written in the value-attribute of the option-tag.</help></el><el type="p"><display>showDropdownSQL</display><insert>showDropdownSQL</insert><help>[string] If you want a dropdown then provide a sql-query if you want a common text-field leave it blank.</help></el><el type="p"><display>fieldName</display><insert>fieldName</insert><help>[string] The name of the column the filter should be placed to.</help></el></childElements></el><el><display>ColumnRadioButton</display><insert>&lt;!--#include virtual="/gab_Library/class_drawtable/class_columnRadioButton.asp"--&gt;</insert><childElements><el type="p"><display>disabled</display><insert>disabled</insert><help>[bool] indicates if the radiobuttons are disabled or not? default = false</help></el><el type="p"><display>isNumber</display><insert>isNumber</insert><help>true/false - is this a column with numbers?</help></el><el type="p"><display>colType</display><insert>colType</insert><help>Dont touch this!</help></el><el type="p"><display>headerTdAttributes</display><insert>headerTdAttributes</insert><help>TD-Attributes for the TD the sort is in.</help></el><el type="p"><display>tdAttributes</display><insert>tdAttributes</insert><help>TD-Attributes for every TD in this column. e.g: width=20</help></el><el type="p"><display>value</display><insert>value</insert><help>Whats the value of the Radiobutton in this column?</help></el><el type="p"><display>displayString</display><insert>displayString</insert><help>The name displayed in the header of the table for this column.</help></el><el type="p"><display>fieldName</display><insert>fieldName</insert><help>Name of the filed in the sql-query. So you see every field must be available in your sql-query!</help></el></childElements></el><el><display>TableLegend</display><insert>&lt;!--#include virtual="/gab_Library/class_drawtable/class_tableLegend.asp"--&gt;</insert><childElements><el type="m"><display>toString(legendCaption)</display><insert>toString(legendCaption)</insert><help>gets the HTML as string</help></el><el type="m"><display>addItem(hint, description)</display><insert>addItem(hint, description)</insert><help>adds a new legend item</help></el><el type="p"><display>text</display><insert>text</insert><help>[string] some free text for the legend</help></el></childElements></el><el><display>TableRow</display><insert>&lt;!--#include virtual="/gab_Library/class_drawtable/class_tableRow.asp"--&gt;</insert><childElements><el type="p"><display>disabled</display><insert>disabled</insert><help>[bool] should the row be disabled? clicking then is not allow, radiobuttons are disabled, etc.</help></el><el type="p"><display>BGColor</display><insert>BGColor</insert><help>[string] background-color of the row</help></el><el type="p"><display>attributes</display><insert>attributes</insert><help>[string] additional attributes inside the TR-element</help></el><el type="p"><display>CSSClass</display><insert>CSSClass</insert><help>[string] CSS-Class of the row (TR-element).</help></el><el type="p"><display>hoverEffect</display><insert>hoverEffect</insert><help>[bool] hovereffect (on mouseover) turned on or not? default taken from Drawtable setting</help></el><el type="p"><display>recordID</display><insert>recordID</insert><help>[string] the ID of the current data-record. depends on the fieldlinkID of the Drawtable</help></el><el type="p"><display>ID</display><insert>ID</insert><help>[string] ID-attribute of the TR-element</help></el><el type="p"><display>index</display><insert>index</insert><help>[int] index (position) of the row in the table. starts with 0</help></el></childElements></el><el><display>TableSessionObject</display><insert>&lt;!--#include virtual="/gab_Library/class_drawtable/class_tableSession.asp"--&gt;</insert><childElements><el type="m"><display>InitializeSessionObject()</display><insert>InitializeSessionObject()</insert><help></help></el><el type="m"><display>checkSessionObject()</display><insert>checkSessionObject()</insert><help></help></el><el type="m"><display>getSessionObject(objValue)</display><insert>getSessionObject(objValue)</insert><help></help></el><el type="m"><display>getAllFilters()</display><insert>getAllFilters()</insert><help></help></el><el type="m"><display>getSearchValue()</display><insert>getSearchValue()</insert><help></help></el><el type="m"><display>getSortValue(filterObj, isSortingAllowed)</display><insert>getSortValue(filterObj, isSortingAllowed)</insert><help></help></el><el type="m"><display>getFilterValue(filterValue)</display><insert>getFilterValue(filterValue)</insert><help></help></el><el type="m"><display>getAbsolutePage()</display><insert>getAbsolutePage()</insert><help></help></el></childElements></el><el><display>Drawtable</display><insert>&lt;!--#include virtual="/gab_Library/class_drawtable/drawtable.asp"--&gt;</insert><childElements><el type="m"><display>addRadioBtn(fieldname,displaystring,matchID,tdAttributes)</display><insert>addRadioBtn(fieldname,displaystring,matchID,tdAttributes)</insert><help>Add a radio Button column. Old method! Use addColumn with radiobutton-instance</help></el><el type="m" obsolete="1"><display>addfield(fieldname, displaystring, displayfunction, tdAttributes)</display><insert>addfield(fieldname, displaystring, displayfunction, tdAttributes)</insert><help>OBSOLETE! Add field method. This is an old one. You should use addColumn-method</help></el><el type="m"><display>existsTableSession()</display><insert>existsTableSession()</insert><help>Check if the Session Object for the filters exists.</help></el><el type="m"><display>addColumn(colObj)</display><insert>addColumn(colObj)</insert><help>Adds a column to your table.</help></el><el type="m" obsolete="1"><display>set_allowFastDelete(val)</display><insert>set_allowFastDelete(val)</insert><help>OBSOLETE! use fastDelete-property instead</help></el><el type="m" obsolete="1"><display>addFilter(fieldName, showDropdownSQL, primaryKey, displayField, defaultSelect, fieldToMatch)</display><insert>addFilter(fieldName, showDropdownSQL, primaryKey, displayField, defaultSelect, fieldToMatch)</insert><help>OBSOLETE! Add filter method. This is an old one. You should use addNewFilter</help></el><el type="m"><display>getChangedRows()</display><insert>getChangedRows()</insert><help>returns an array with all the IDs of the records which have been changed</help></el><el type="m"><display>dataSubmitted()</display><insert>dataSubmitted()</insert><help>checks if the form has been submitted. use it if you want work with radiobuttons, etc.</help></el><el type="m"><display>addNewFilter(colObj)</display><insert>addNewFilter(colObj)</insert><help>Adds a filter to a special column.</help></el><el type="m"><display>draw()</display><insert>draw()</insert><help>Draws the whole table.</help></el><el type="p" obsolete="1"><display>fieldlinkID</display><insert>fieldlinkID</insert><help>GET: [string] OBSOLETE! use PK instead
SET: [string] OBSOLETE! use PK instead. name of the primary key-column of the table.</help></el><el type="p"><display>fastDelete</display><insert>fastDelete</insert><help>GET: [bool] gets the fast-deleting setting
SET: [bool] enables fast-deleting. tablename must be set before!</help></el><el type="p"><display>getCurrentRecordID</display><insert>getCurrentRecordID</insert><help>GET: [string] gets the unique-id for the current record.</help></el><el type="p"><display>fastDeleteMessage</display><insert>fastDeleteMessage</insert><help>SET: [string] sets an additional message for the fastdelete confirm-box.</help></el><el type="p"><display>height</display><insert>height</insert><help>SET: [int] height in pixels of the table in order to let the headers stay on top. 0 = no height</help></el><el type="p"><display>default property get height</display><insert>default property get height</insert><help>[int] gets the height</help></el><el type="p"><display>pageNumbersAmount</display><insert>pageNumbersAmount</insert><help>[int] amount of page numbers which should be displayed in the paging bar</help></el><el type="p"><display>autoGenerateColumns</display><insert>autoGenerateColumns</insert><help>[bool] auto generate the columns? default = true. if using the addColumn once then its disabled.
the caption is called the same as the fieldname just capitalized (first letter uppered)
the PK is excluded.</help></el><el type="p"><display>enableResetFilter</display><insert>enableResetFilter</insert><help>[bool] should the reset-filter possibility? default = true</help></el><el type="p"><display>showTitleBar</display><insert>showTitleBar</insert><help>[bool] should the titlebar (title, fullsearch, excelexport, etc.) be shown. default = true</help></el><el type="p"><display>showColumnHeaders</display><insert>showColumnHeaders</insert><help>[bool] should the headers of the columns be shown? default = true</help></el><el type="p"><display>showFooter</display><insert>showFooter</insert><help>[bool] should the footer of the table be shown (records per page, paging, etc). default = true</help></el><el type="p" obsolete="1"><display>defaultStylesheet</display><insert>defaultStylesheet</insert><help>[bool] OBSOLETE! use the setting in const.asp to set the styles.</help></el><el type="p" obsolete="1"><display>addurl</display><insert>addurl</insert><help>[string] OBSOLETE! use formURL instead!</help></el><el type="p"><display>cssLocation</display><insert>cssLocation</insert><help>[string] location of the stylesheet file. by default it is taken from the config.asp.</help></el><el type="p"><display>legend</display><insert>legend</insert><help>[TableLegend] a (optional) legend for the table.</help></el><el type="p"><display>onRowCreated</display><insert>onRowCreated</insert><help>[string] name of the sub you want to execute when a row is created. it is raised before it will be drawn.
eventargument is an instance of ROW.</help></el><el type="p"><display>filterConditionPosition</display><insert>filterConditionPosition</insert><help>[int] after which "WHERE" statement of the sql-query should the filter be placed? default = 1
e.g. SELECT * FROM t WHERE a IN (SELECT * FROM t1 WHERE b = c) by default the filter will be placed
and executed after the first WHERE. in some cases (advanced use) you need the filter to be executed after
the second, third, etc. WHERE. this property lets you change that.</help></el><el type="p"><display>isInModal</display><insert>isInModal</insert><help>[bool] indicates if the table is drawn in a modal-dialog. e.g. Important for excel-export because it wont work in modal</help></el><el type="p"><display>autoDelete</display><insert>autoDelete</insert><help>[bool] turns on/off the auto delete of a record if you click on the fastdelete-button. usefull if you want to handle the delete yourself.
if you turn it off you will get the record id by request.form("fastdeleteID") after postback.</help></el><el type="p"><display>showSelectAll</display><insert>showSelectAll</insert><help>[bool] turn on the selectall feature: possibility to select all radiobuttons of a column. link is displayed in header. default = false</help></el><el type="p"><display>logging</display><insert>logging</insert><help>[bool] logging on/off. if on then actions will be logged (only actions which are implemented till now.)</help></el><el type="p"><display>tableCellspacing</display><insert>tableCellspacing</insert><help>[int] Cellspacing of the table. default = 1</help></el><el type="p"><display>tableCellpadding</display><insert>tableCellpadding</insert><help>[int] Cellpadding of the table. default = 3</help></el><el type="p"><display>extendButtonBar</display><insert>extendButtonBar</insert><help>[string] Name of the function you want to execute in the buttonbar. Function must return the output! e.g. You need an extra button in the button-bar</help></el><el type="p"><display>stringBuilderDLL</display><insert>stringBuilderDLL</insert><help>[bool] - is the stringBuilder-DLL available? StringBuilderDLL makes the table extremly fast!</help></el><el type="p"><display>restoreFilterOnSearch</display><insert>restoreFilterOnSearch</insert><help>[bool] do you want to remember the seted filter when using the fulltextsearch?</help></el><el type="p"><display>allowHtml</display><insert>allowHtml</insert><help>[bool] Allow HTML-Tags in tabledata? ATTENTION! SETTING IT "FALSE" WILL CAUSE SPEED REDUCTION!!! default: true</help></el><el type="p"><display>excelTxt</display><insert>excelTxt</insert><help>[string] Your own Text or IMAGE for the Export to Excel button.</help></el><el type="p"><display>addTxt</display><insert>addTxt</insert><help>[string] Your own Text or IMAGE for the Add new recordset button.</help></el><el type="p"><display>excelExport</display><insert>excelExport</insert><help>[bool] You want to allow Excel exports?</help></el><el type="p"><display>printTxt</display><insert>printTxt</insert><help>[string] Your own Text or IMAGE for the prinitng button.</help></el><el type="p"><display>fullsearch</display><insert>fullsearch</insert><help>[bool] enables the fullsearch which lets you searching over the whole table.</help></el><el type="p"><display>hovereffect</display><insert>hovereffect</insert><help>[string] enable hovereffect on mouseover of a row? default = True</help></el><el type="p"><display>tablewidth</display><insert>tablewidth</insert><help>[string] the width of the table. default = 100%</help></el><el type="p"><display>printing</display><insert>printing</insert><help>[bool] loads the print.css and shows a print link</help></el><el type="p"><display>database</display><insert>database</insert><help>[string] for some sql commands we need to know which DB.</help></el><el type="p"><display>timeDebuging</display><insert>timeDebuging</insert><help>[bool] where do we loose the time?</help></el><el type="p"><display>debuging</display><insert>debuging</insert><help>[bool] some debug parameters will be displayed if true</help></el><el type="p"><display>paging</display><insert>paging</insert><help>[bool] allow paging or not</help></el><el type="p"><display>recsPerPage</display><insert>recsPerPage</insert><help>[int] How many records per page do you want to display?</help></el><el type="p"><display>target</display><insert>target</insert><help>[string] The target for all links</help></el><el type="p"><display>headersPerRow</display><insert>headersPerRow</insert><help>[int] every how many rows do you want to display the headers again. 0 = just one header.</help></el><el type="p"><display>showFilterBar</display><insert>showFilterBar</insert><help>[bool] enable/disable filterbar</help></el><el type="p"><display>isSortable</display><insert>isSortable</insert><help>[bool] enable/disable sorting. default = true</help></el><el type="p"><display>addurlJS</display><insert>addurlJS</insert><help>[string] javascript which should be executed when clicking on a row or on the "add" buutton.
e.g. alert('{0}') (placeholder is replaced by the value of the PK)</help></el><el type="p"><display>formURL</display><insert>formURL</insert><help>[string] the url you want to send the user to when clicking on a record or
clicking the "add record" button. {0} = will be replaced by ID of the record. e.g. news.asp?id={0}
use addurlJS if you want to execute a javascript instead of calling an url</help></el><el type="p"><display>title</display><insert>title</insert><help>[string] Caption for the table. will be displayed at the top</help></el><el type="p"><display>allowAdding</display><insert>allowAdding</insert><help>[bool] should adding a new record be allowed</help></el><el type="p"><display>isEditable</display><insert>isEditable</insert><help>[bool] are the records clickable? default = true</help></el><el type="p"><display>commonSort</display><insert>commonSort</insert><help>[string] how should the data be ordered by default? syntax is like in the ORDER BY-clause</help></el><el type="p"><display>allTableColumns</display><insert>allTableColumns</insert><help>[Dictionary] Collection where your columns are stored. it can be usefull to access it on runtime</help></el><el type="p"><display>RS</display><insert>RS</insert><help>[Recordset] Recordset Object with all the data</help></el><el type="p"><display>PK</display><insert>PK</insert><help>[string] name of the column which holds the primary key. e.g. a column which uniquely identifies each record</help></el><el type="p"><display>table</display><insert>table</insert><help>[string] Tablename to which the data belongs to. important e.g. for fastdeleteing.</help></el><el type="p"><display>SQLQuery</display><insert>SQLQuery</insert><help>[string] The sql-query for the whole table. Dont forget to include every field you will need later. Dont use ORDER BY. Use "commonsort"-property instead.</help></el></childElements></el><el><display>DropdownConnector</display><insert>&lt;!--#include virtual="/gab_Library/class_dropdown/class_dropdownConnector.asp"--&gt;</insert><childElements><el type="m"><display>load(currentPage)</display><insert>load(currentPage)</insert><help></help></el><el type="m"><display>drawPanel()</display><insert>drawPanel()</insert><help></help></el><el type="m"><display>draw(size, width)</display><insert>draw(size, width)</insert><help></help></el><el type="p"><display>sort</display><insert>sort</insert><help>SET: [string] set the sorting. ASC = ascending, DESC = descending, empty = no sorting</help></el><el type="p"><display>captionTarget</display><insert>captionTarget</insert><help>[string] caption which will be displayed over the target dropdown</help></el><el type="p"><display>captionSource</display><insert>captionSource</insert><help>[string] caption which will be displayed over the source dropdown</help></el><el type="p"><display>allowSwap</display><insert>allowSwap</insert><help>[bool] default = true</help></el><el type="p"><display>allowMoveSingle</display><insert>allowMoveSingle</insert><help>[bool] default = true</help></el><el type="p"><display>allowMoveAll</display><insert>allowMoveAll</insert><help>[bool] defualt = true</help></el><el type="p"><display>page</display><insert>page</insert><help>[Generatepage] instance of the currentpage</help></el><el type="p"><display>target</display><insert>target</insert><help>[Dropdown]</help></el><el type="p"><display>source</display><insert>source</insert><help>[Dropdown]</help></el></childElements></el><el><display>DropdownItem</display><insert>&lt;!--#include virtual="/gab_Library/class_dropdown/class_dropdownItem.asp"--&gt;</insert><childElements><el type="m"><display>draw()</display><insert>draw()</insert><help>draws the item using the output of the dropdown</help></el><el type="p"><display>dropdown</display><insert>dropdown</insert><help>[Dropdown] the dropdown it belongs to.</help></el><el type="p"><display>show</display><insert>show</insert><help>[bool] show the item or not. default = true</help></el><el type="p"><display>attributes</display><insert>attributes</insert><help>[string] additional attributes</help></el><el type="p"><display>selected</display><insert>selected</insert><help>[bool] indicates whether the item is selected or not</help></el><el type="p"><display>title</display><insert>title</insert><help>[string] title for the option</help></el><el type="p"><display>style</display><insert>style</insert><help>[string] css-Styles for the item</help></el><el type="p"><display>text</display><insert>text</insert><help>[string] text of the item. refers to the displayed-value of the item</help></el><el type="p"><display>value</display><insert>value</insert><help>[string] value of the item. referrs to &lt;option value=""&gt;</help></el><el type="p"><display>index</display><insert>index</insert><help>[int] index of the item in the dropdown</help></el></childElements></el><el><display>Dropdown</display><insert>&lt;!--#include virtual="/gab_Library/class_dropdown/dropdown.asp"--&gt;</insert><childElements><el type="m"><display>print(value)</display><insert>print(value)</insert><help>prints out to the output</help></el><el type="m"><display>isCommonDropdown()</display><insert>isCommonDropdown()</insert><help>common Dropdown means that it will be rendered as a SELECT-Tag</help></el><el type="m"><display>getAttribute(attributeName, attributeValue)</display><insert>getAttribute(attributeName, attributeValue)</insert><help>gets an Attribute HTML-string</help></el><el type="m"><display>toString()</display><insert>toString()</insert><help>returns the dropdown as a string</help></el><el type="m"><display>getNewItem(itemValue, itemText)</display><insert>getNewItem(itemValue, itemText)</insert><help></help></el><el type="m"><display>getNewConnector(target)</display><insert>getNewConnector(target)</insert><help>returns a new connector to another dropdown. it autmatically connects these two</help></el><el type="m"><display>draw()</display><insert>draw()</insert><help>draws the dropdown on the page</help></el><el type="p"><display>controlLocation</display><insert>controlLocation</insert><help>GET: [string] gets the location of the control</help></el><el type="p"><display>selectedValue</display><insert>selectedValue</insert><help>GET: [array], [string] returns the selected value(s)
SET: [string], [array] what value(s) is selected. array needed if multiple dropdown</help></el><el type="p"><display>enableAdding</display><insert>enableAdding</insert><help>[bool] set this to true to enable adding a new item to the dropdown. enableAdding = false
only for advanced use. Attention: cssClass, styles, etc will always apply just to the dropdown</help></el><el type="p"><display>connectedTo</display><insert>connectedTo</insert><help>[DropdownConnector] connect the dropdown to another one using a DropdownConnector</help></el><el type="p"><display>autoDrawItems</display><insert>autoDrawItems</insert><help>[bool] defines if each item will be drawn autmatically after the onItemCreated-Event
has been raised. default = true. disabling usefull if you want to add items during the runtime</help></el><el type="p"><display>multipleSelectionType</display><insert>multipleSelectionType</insert><help>[int] a value of the SELECTIONTYPE-Enumeration. Set this property if you want to change the
selectiontype of a multiple dropdown. Useful if you want to have formatted ITEMS,
because the dropdown isnt rendered as a SELECT-Element then. There are 3 variations:
DD_SELECTIONTYPE_COMMON = its the common one. hold down CTRL to select more
DD_SELECTIONTYPE_MULTIPLE = selection comes with checkboxes.
DD_SELECTIONTYPE_SINGLE = selection comes with radiobuttons. so just one selection is allowed.</help></el><el type="p"><display>commonFieldValue</display><insert>commonFieldValue</insert><help>[string] value for the common-field. default = 0</help></el><el type="p"><display>commonFieldText</display><insert>commonFieldText</insert><help>[string] text of the common-field. e.g. --- please select a value ---</help></el><el type="p"><display>useStringBuilder</display><insert>useStringBuilder</insert><help>[bool] indicates if stringbuilder should be used for rendering. DLL-must be installed. default = true</help></el><el type="p"><display>disabled</display><insert>disabled</insert><help>[bool] indicates whether the control is disabled or not. default = false</help></el><el type="p"><display>size</display><insert>size</insert><help>[int] number of displayed rows if its a multiple dropdown. default = 1. If its not a common-multiple-dropdown
then the size is used as pixels for the height of the dropdown.</help></el><el type="p"><display>multiple</display><insert>multiple</insert><help>[bool] is it a multiple dropdown? default = false</help></el><el type="p"><display>tabIndex</display><insert>tabIndex</insert><help>[int] index of the control. -1 = dont add to the tabindex-collection</help></el><el type="p"><display>dataValueField</display><insert>dataValueField</insert><help>[string], [int] field-name of the datasource that provides the value for each list-item</help></el><el type="p"><display>dataTextField</display><insert>dataTextField</insert><help>[string], [int] field-name of the datasource that provides the text-content for each list-item.</help></el><el type="p"><display>valuesDatasource</display><insert>valuesDatasource</insert><help>[array] if array is used as datasource, please provide an array of same length for values too. If no array is given, values are indexed</help></el><el type="p"><display>cssClass</display><insert>cssClass</insert><help>[string] name of the css-class you want to assign to the control</help></el><el type="p"><display>style</display><insert>style</insert><help>[string] css-Styles for the control</help></el><el type="p"><display>attributes</display><insert>attributes</insert><help>[string] additional attributes which go into the &amp;lt;select&gt;-element. e.g. onClick, onChange, etc.</help></el><el type="p"><display>onItemCreated</display><insert>onItemCreated</insert><help>[string] name of function (sub) which should handle onItemCreated. Event will be raised just before printing the item.</help></el><el type="p"><display>ID</display><insert>ID</insert><help>[string] ID of the control. is generated automatically by default but can be set also.</help></el><el type="p"><display>datasource</display><insert>datasource</insert><help>[array], [recordset], [dictionary], [string] when using recordset be sure
to use lib.getUnlockedRecordset! if datasource is a string it will be interpreted as a SQL-query.
after draw() datasource changes to a recordset. When using an array dataasource, you should set the valuesDatasource
 property. If this is not set,the datasource elements will be used as the values and options for the dropdown</help></el><el type="p"><display>name</display><insert>name</insert><help>[string] Name of the control</help></el></childElements></el><el><display>EditableForm</display><insert>&lt;!--#include virtual="/gab_Library/class_editableForm/editableForm.asp"--&gt;</insert><childElements><el type="m" obsolete="1"><display>formEncode(val)</display><insert>formEncode(val)</insert><help>OBSOLETE! use str.HTMLEncode() or lib.RFE()</help></el><el type="m" obsolete="1"><display>encQuotesForFormFields(val)</display><insert>encQuotesForFormFields(val)</insert><help>OBSOLETE! use str.HTMLEncode() or lib.RFE()</help></el><el type="m"><display>valueFor(fieldName, defaultNewValue, defaultEditValue)</display><insert>valueFor(fieldName, defaultNewValue, defaultEditValue)</insert><help>returns the value for a given form-field.</help></el><el type="m"><display>isNew()</display><insert>isNew()</insert><help>indicates if the form is to create a new entity or to modify one</help></el><el type="p"><display>id</display><insert>id</insert><help>GET: [int] gets the ID of the current form. 0 if no id given.
SET: [int] sets the ID of the current form.</help></el></childElements></el><el><display>GabLibCrypt</display><insert>&lt;!--#include virtual="/gab_Library/class_encryption/class_gabLibCrypt.asp"--&gt;</insert><childElements><el type="m"><display>enCrypt(str)</display><insert>enCrypt(str)</insert><help>Encrypts a string with the GabLibCrypt algorithm</help></el><el type="m"><display>deCrypt(str)</display><insert>deCrypt(str)</insert><help>Encrypts a string with the GabLibCrypt algorithm</help></el><el type="p"><display>useSessionID</display><insert>useSessionID</insert><help>undefined</help></el></childElements></el><el><display>Md5Algorithm</display><insert>&lt;!--#include virtual="/gab_Library/class_encryption/class_md5Algorithm.asp"--&gt;</insert><childElements><el type="m"><display>MD5(sMessage)</display><insert>MD5(sMessage)</insert><help>Encrypts a string with the MD5 algorithm</help></el></childElements></el><el><display>Rijndael</display><insert>&lt;!--#include virtual="/gab_Library/class_encryption/class_rijndael.asp"--&gt;</insert><childElements><el type="m"><display>DecryptData(bytIn, bytPassword)</display><insert>DecryptData(bytIn, bytPassword)</insert><help></help></el><el type="m"><display>EncryptData(bytMessage, bytPassword)</display><insert>EncryptData(bytMessage, bytPassword)</insert><help></help></el><el type="m"><display>decrypt(buff())</display><insert>decrypt(buff())</insert><help></help></el><el type="m"><display>encrypt(buff())</display><insert>encrypt(buff())</insert><help></help></el><el type="m"><display>gkey(nb, nk, key())</display><insert>gkey(nb, nk, key())</insert><help></help></el><el type="m"><display>gentables()</display><insert>gentables()</insert><help></help></el></childElements></el><el><display>Sha256Algorithm</display><insert>&lt;!--#include virtual="/gab_Library/class_encryption/class_sha256Algorithm.asp"--&gt;</insert><childElements><el type="m"><display>SHA256(sMessage)</display><insert>SHA256(sMessage)</insert><help>Encrypts a string with the SHA256 algorithm</help></el></childElements></el><el><display>Encryption</display><insert>&lt;!--#include virtual="/gab_Library/class_encryption/encryption.asp"--&gt;</insert><childElements><el type="m"><display>decrypt(str)</display><insert>decrypt(str)</insert><help>Decrypts a string with the configured algorithm (The Cipher-method must be decryptable!)</help></el><el type="m"><display>encrypt(str)</display><insert>encrypt(str)</insert><help>Encrypts a string with the configured algorithm</help></el><el type="p"><display>key</display><insert>key</insert><help>GET: Returns the cipher key
SET: Sets the key for encryption. Only used with AES - if not set, the default key will be used (WARNING: the default key is not secure - use your own for encryption purposes !!!)</help></el><el type="p"><display>algorithm</display><insert>algorithm</insert><help>GET: Returns the algorithm
SET: Sets the algorithm for encryption. Following values accepted: MD5 (default), SHA256, GABLIB, AES</help></el></childElements></el><el><display>ErrorHandler</display><insert>&lt;!--#include virtual="/gab_Library/class_errorHandler/errorHandler.asp"--&gt;</insert><childElements><el type="m"><display>log()</display><insert>[log]()</insert><help>Logs the error for example to database or a file. uses the lib.custom.logError()</help></el><el type="m"><display>sendMail()</display><insert>sendMail()</insert><help>sends an email with the error to the webadmins</help></el><el type="m"><display>drawValue(name, value)</display><insert>drawValue(name, value)</insert><help></help></el><el type="m"><display>draw()</display><insert>draw()</insert><help>Draws the error with the set properties.</help></el><el type="m"><display>generate()</display><insert>generate()</insert><help>Generates the handler. this means that all actions will be done. drawing, mailing, logging etc.</help></el><el type="p"><display>executingFile</display><insert>executingFile</insert><help>GET: [string] gets the fullname of the file which has been executed when the error was generated (incl. Querystring)</help></el><el type="p"><display>cssLocation</display><insert>cssLocation</insert><help>[string] location of the stylesheet which will be taken for formatting the errorhandler on drawing.
default is taken from the config</help></el><el type="p"><display>alternativeText</display><insert>alternativeText</insert><help>[string] alternative message which will be displayed when no errorObject is available.</help></el><el type="p"><display>errorObject</display><insert>errorObject</insert><help>[error], [aspError] sets the errorobject if available. data of these errors will be used for mail and log
default is nothing, so no additional information about the error will be displayed.
normally get with server.getLastError()</help></el><el type="p"><display>debuggingVar</display><insert>debuggingVar</insert><help>[string] Sets a variable you want to display with the error. So it is faster for debugging.
e.g. an Sql-query. So will see the variable when the error occurs.
by defualt the value from the sessions named "GL_lastErrorHelperVar" is taken.</help></el><el type="p"><display>logging</display><insert>logging</insert><help>[bool] Log this error? calls lib.custom.logError() if true. default = taken from consts.errorLogging</help></el><el type="p"><display>notifyViaMail</display><insert>notifyViaMail</insert><help>[bool] Send Email to all WebAdmins with error details?</help></el><el type="p"><display>errorDuring</display><insert>errorDuring</insert><help>[string] During what did the error happen. e.g. executing Sql-query
Its just for the user. Wont be logged or sent or anything else. Just displayed.</help></el></childElements></el><el><display>ExcelExporter</display><insert>&lt;!--#include virtual="/gab_Library/class_excelExporter/excelExporter.asp"--&gt;</insert><childElements><el type="m"><display>encodeData(val)</display><insert>encodeData(val)</insert><help>encodes double-quotes to &amp;quot; so it can be displayed in input-fields</help></el><el type="m"><display>getHiddenFields()</display><insert>getHiddenFields()</insert><help>generates hidden-fields with your given input</help></el><el type="m"><display>addOutput(inputStr)</display><insert>addOutput(inputStr)</insert><help>adds an string to the excel-output</help></el><el type="m"><display>export()</display><insert>export()</insert><help>exports the output</help></el><el type="p"><display>formatStyleText</display><insert>formatStyleText</insert><help>GET: [string] gets the style attribute to force a column to appear as a text-column</help></el><el type="p"><display>output</display><insert>output</insert><help>GET: [string] gets the current output-string</help></el><el type="p"><display>useStringBuilder</display><insert>useStringBuilder</insert><help>[bool] use stringBuilder for concating the output string?</help></el></childElements></el><el><display>Excelimport</display><insert>&lt;!--#include virtual="/gab_Library/class_excelImport/excelimport.asp"--&gt;</insert><childElements><el type="m"><display>closeConnection()</display><insert>closeConnection()</insert><help>closes the Connection to the excelsheet and kills the recordset-object</help></el><el type="m"><display>getRecordset()</display><insert>getRecordset()</insert><help></help></el><el type="p"><display>columnCount</display><insert>columnCount</insert><help>GET: [int] Returns the number of Columns</help></el><el type="p"><display>fileName</display><insert>fileName</insert><help>The Path and Filename of the Excel File</help></el><el type="p"><display>sqlQuery</display><insert>sqlQuery</insert><help>SQL Command, e.g. "SELECT * FROM [Tabelle$A:F]"</help></el></childElements></el><el><display>FileSelector</display><insert>&lt;!--#include virtual="/gab_Library/class_fileSelector/fileSelector.asp"--&gt;</insert><childElements><el type="m"><display>getExtensionIcon(file)</display><insert>getExtensionIcon(file)</insert><help>gets an HTML-string with the appropriate icon for the filetype</help></el><el type="m"><display>draw()</display><insert>draw()</insert><help>draws the control</help></el><el type="p"><display>sourcePath</display><insert>sourcePath</insert><help>SET: [string] virtual-path of the folder you want to browse</help></el><el type="p"><display>selected</display><insert>selected</insert><help>GET: [array] gets the selected files. usefull after postback
SET: [array] array with full virtual-paths of the files which should be selected. If multipleSelection is off then the first item is taken. Note: Folder must always end with a "/"</help></el><el type="p"><display>onItemClicked</display><insert>onItemClicked</insert><help>[string] The java script to execute when an item is clicked</help></el><el type="p"><display>showTreeLines</display><insert>showTreeLines</insert><help>[bool] show the treelines? default = true</help></el><el type="p"><display>showExtensionOfKnownTypes</display><insert>showExtensionOfKnownTypes</insert><help>[bool] show the extension of a known file-type. default = false
a file is known if the icon is available. just copy the icon to the images-directory</help></el><el type="p"><display>multipleSelection</display><insert>multipleSelection</insert><help>[bool] multiple selection is allowed? default = true</help></el><el type="p"><display>useStringBuilder</display><insert>useStringBuilder</insert><help>[bool] use the stringbuilder? DLL need to be installed. default = true</help></el><el type="p"><display>showFiles</display><insert>showFiles</insert><help>[bool] show the files within folder? useful when you want only the folders. default = true</help></el><el type="p"><display>filesOpenable</display><insert>filesOpenable</insert><help>[bool] should the user be able to open the files on double-click? default = true</help></el><el type="p"><display>height</display><insert>height</insert><help>[int] height of the control in pixels.</help></el><el type="p"><display>foldersSelectable</display><insert>foldersSelectable</insert><help>[bool] are the folders selectable? default = false</help></el><el type="p"><display>filesSelectable</display><insert>filesSelectable</insert><help>[bool] are the files selectable? default = true</help></el><el type="p"><display>indentWidth</display><insert>indentWidth</insert><help>[int] width of every indent in pixels. default = 15</help></el><el type="p"><display>defaultStyles</display><insert>defaultStyles</insert><help>[bool] load the default styles for the control? default = true</help></el><el type="p"><display>fso</display><insert>fso</insert><help>[object] filesystem-object. its public that the client can use it too.</help></el></childElements></el><el><display>Fileupload</display><insert>&lt;!--#include virtual="/gab_Library/class_fileUpload/fileUpload.asp"--&gt;</insert><childElements><el type="m"><display>upload()</display><insert>upload()</insert><help>call this to upload the file</help></el><el type="p" obsolete="1"><display>fileName</display><insert>fileName</insert><help>SET: [string] OBSOLETE! use fieldname instead</help></el><el type="p"><display>getErrorCode</display><insert>getErrorCode</insert><help>GET: [string] gets the errorcode if an error occured after upload(). e.g. NFS for no file given, etc.</help></el><el type="p"><display>getErrorMsg</display><insert>getErrorMsg</insert><help>GET: [string] if an error occurs you can get the errorMsg with this property after using upload()</help></el><el type="p"><display>uploadPath</display><insert>uploadPath</insert><help>GET: [string] gets the path where the file will be uploaded
SET: [string] virtual target path where the file will be uploaded to e.g. /dir/subdir/. default = consts.userFiles</help></el><el type="p"><display>saveUnique</display><insert>saveUnique</insert><help>[bool] if overwriting is off use this to "index" the file when it exists. example: haxn.gif -&gt; haxn(1).gif, etc.
useful if one name is neeeded for a file. default = false</help></el><el type="p"><display>serverLimit</display><insert>serverLimit</insert><help>[int] the value of AspMaxRequestEntityAllowed set on the server in bytes. defines the
maximum allowed size of the form. if the user tries to upload more than this allowed size
this class throws an error.</help></el><el type="p"><display>uploaderObj</display><insert>uploaderObj</insert><help>[object] thats the uploaderObj-object. e.g. w3.upload. you can access it</help></el><el type="p"><display>allowedExtensions</display><insert>allowedExtensions</insert><help>[string] includes the allowed extensions - default are txt files. seperate more with ","</help></el><el type="p"><display>overwrite</display><insert>overwrite</insert><help>[bool] true if overwriting is allowed; default is false</help></el><el type="p"><display>maxFileSize</display><insert>maxFileSize</insert><help>[int] the maximum size of the file in bytes. default is 100000 (100KB)</help></el><el type="p"><display>defaultFilename</display><insert>defaultFilename</insert><help>[string] name the file should be renamed when saving it on the server.
name without extension. extension will be taken from the source-file.
leave empty to keep the original name.</help></el><el type="p"><display>fieldName</display><insert>fieldName</insert><help>[string] the name of the formField in your form. The field must be type=file.</help></el></childElements></el><el><display>Form</display><insert>&lt;!--#include virtual="/gab_Library/class_form/form.asp"--&gt;</insert><childElements><el type="m"><display>drawCancelButton(url)</display><insert>drawCancelButton(url)</insert><help>Draws a cancel button for the form.</help></el><el type="m"><display>drawPrintButton()</display><insert>drawPrintButton()</insert><help>Draws the Print button with the print icon</help></el><el type="m"><display>errorOccuredOn(name)</display><insert>errorOccuredOn(name)</insert><help>Checks if an error occured on a specific control</help></el><el type="m"><display>drawError(name)</display><insert>drawError(name)</insert><help>If your form is not valid, use this to display neat error messages</help></el><el type="p"><display>action</display><insert>action</insert><help>GET: [string] gets the action needed for the form to submit. full qualified filename incl. the querystring</help></el><el type="p"><display>message</display><insert>message</insert><help>[variant] some message the form should store. usefull for error-, succes-messages, etc.
hint: use an array if you want to store the cssclass also ;)</help></el><el type="p"><display>validator</display><insert>validator</insert><help>[validateble] The validator you use in your page.</help></el><el type="p"><display>errorsTitle</display><insert>errorsTitle</insert><help>[String] the title for the Errors that are drawed using drawError()</help></el><el type="p"><display>printIconPath</display><insert>printIconPath</insert><help>[string] the virtual path to the print icon. default is taken from the gablib icons</help></el></childElements></el><el><display>Library</display><insert>lib</insert><childElements><el type="m"><display>getAllFromQueryStringBut(query)</display><insert>getAllFromQueryStringBut(query)</insert><help>Get QueryString without specified variables.</help></el><el type="m"><display>getUnlockedRecordset(sql)</display><insert>getUnlockedRecordset(sql)</insert><help></help></el><el type="m"><display>getRecordset(sql)</display><insert>getRecordset(sql)</insert><help></help></el><el type="m"><display>getScalar(sql, noRecordReplacer)</display><insert>getScalar(sql, noRecordReplacer)</insert><help>executes an sql-query and returns the first value of the first row.</help></el><el type="m"><display>iif(i, j, k)</display><insert>iif(i, j, k)</insert><help></help></el><el type="m"><display>fileExists(virtualPath)</display><insert>fileExists(virtualPath)</insert><help>Checks if a file exists on the filesystem</help></el><el type="m"><display>URLDecode(endcodedText)</display><insert>URLDecode(endcodedText)</insert><help>Opposite of server.URLEncode</help></el><el type="m"><display>logAndForget(identification, logMessage)</display><insert>logAndForget(identification, logMessage)</insert><help>Does a simple log using the Logger-class</help></el><el type="m"><display>getUniqueID()</display><insert>getUniqueID()</insert><help>Returns an unique ID for each pagerequest, starting with 1</help></el><el type="m"><display>sleep(seconds)</display><insert>sleep(seconds)</insert><help>Sleeps for a specified time. for a while :)</help></el><el type="m"><display>tooltip(title, msg)</display><insert>tooltip(title, msg)</insert><help>Returns HTML code which can be used within any tag to display a tooltip.</help></el><el type="m"><display>execJS(javascriptCode)</display><insert>execJS(javascriptCode)</insert><help>executes a given javascript. input may be a string or an array. each array field = a line</help></el><el type="m"><display>getFromQS(name, alternative)</display><insert>getFromQS(name, alternative)</insert><help>gets a value from the querystring.</help></el><el type="m"><display>QS(name)</display><insert>QS(name)</insert><help>just an equivalent for request.querystring. if empty then returns whole querystring.</help></el><el type="m"><display>RFHas(name)</display><insert>RFHas(name)</insert><help>returns true if a given value exists in the request.form</help></el><el type="m"><display>RFE(name)</display><insert>RFE(name)</insert><help>just an equivalent for the RF-method but it encodes the form field.
useful if you want the value be HTML encoded. e.g. inserting into value fields</help></el><el type="m"><display>RF(name)</display><insert>RF(name)</insert><help>just an equivalent for request.form.</help></el><el type="m"><display>error(msg)</display><insert>[error](msg)</insert><help>writes an error and ends the response. for unexpected error</help></el><el type="m"><display>getFileIcon(file)</display><insert>getFileIcon(file)</insert><help>gets an HTML-string with the appropriate icon for the filetype</help></el><el type="m"><display>init(var, default)</display><insert>init(var, default)</insert><help>initializes a variable with a default value if the variable is not set set (isEmpty)</help></el><el type="m"><display>getGUID()</display><insert>getGUID()</insert><help>gets a new globally unique Identifier.</help></el><el type="m"><display>require(classNames)</display><insert>require(classNames)</insert><help>assumes that given class/classes is/are registered. if not error will be thrown.</help></el><el type="m"><display>registerClass(className)</display><insert>registerClass(className)</insert><help>registers a class that it has been loaded (included) and therefore can be used</help></el><el type="m"><display>expandArray(arr, value)</display><insert>expandArray(arr, value)</insert><help>expands a given array by a given value or values of a given array and returns the new array</help></el><el type="p"><display>browser</display><insert>browser</insert><help>GET: [string] gets the browser (uppercased shortcut) which is used. version is ignored. e.g. FF, IE, etc. empty if unknown</help></el><el type="p"><display>version</display><insert>version</insert><help>GET: [string] gets the version of the gabLibrary installation</help></el><el type="p"><display>numberOfDBAccess</display><insert>numberOfDBAccess</insert><help>GET: [int] returns the number of executed queries on the database</help></el><el type="p"><display>registeredClasses</display><insert>registeredClasses</insert><help>[dictionary] collection of registered classes. key = name of the class (lcase)</help></el><el type="p"><display>FSO</display><insert>FSO</insert><help>[FileSystemObject] an instance of fileSystemObject for quick use ;)</help></el><el type="p"><display>page</display><insert>page</insert><help>[GeneratePage] currently executing page. just needed for control developers.</help></el><el type="p"><display>form</display><insert>form</insert><help>[formCollection] the collection which holds all the form elements. the RF(), RFE(), etc methods
use this collection. when using a multipart/form-data form, then its useful to assign the collection
to a components formcollection. e.g. W3Upload. ONLY ADVANCED USE!</help></el><el type="p"><display>custom</display><insert>custom</insert><help>[customLib] CustomLib-instance loaded automatically with library.
So you can use your custom-methods with using lib.custom.myMethod and lib-mthods using lib.myMethod</help></el><el type="p"><display>databaseConnection</display><insert>databaseConnection</insert><help>[ADODBConnection] Holds the Database-connection</help></el></childElements></el><el><display>Logger</display><insert>&lt;!--#include virtual="/gab_Library/class_logger/logger.asp"--&gt;</insert><childElements><el type="m"><display>clearIndex()</display><insert>clearIndex()</insert><help>use this to reset the index file to default state</help></el><el type="m"><display>deleteAll()</display><insert>deleteAll()</insert><help>Attention: this function deletes all log files from the logFilePath</help></el><el type="m"><display>deleteIdent()</display><insert>deleteIdent()</insert><help>use this to delete all log files, with the same name, e.g all "common_logs_...."</help></el><el type="m"><display>log(message)</display><insert>[log](message)</insert><help>use this to log</help></el><el type="p"><display>onlyOneLogFile</display><insert>onlyOneLogFile</insert><help>[bool] if this flag is true and the splitting size has been reached, the old file will
be deleted and a new one will be created</help></el><el type="p"><display>splittingSize</display><insert>splittingSize</insert><help>[int] the maximum file size of the current log file in bytes, default is "100 000"</help></el><el type="p"><display>identification</display><insert>identification</insert><help>[string] the name of the log file, default is "common_logs"</help></el></childElements></el><el><display>Mathematics</display><insert>&lt;!--#include virtual="/gab_Library/class_mathematics/mathematics.asp"--&gt;</insert><childElements><el type="m"><display>Roman(number)</display><insert>Roman(number)</insert><help>Calculates the roman numeral for a given number</help></el><el type="m"><display>Factorial(number)</display><insert>Factorial(number)</insert><help>Calculates the factorial number</help></el><el type="m"><display>Pow(a, byval b)</display><insert>Pow(a, byval b)</insert><help>Returns a specified number raised to the specified power</help></el><el type="m"><display>Min(number1, number2)</display><insert>Min(number1, number2)</insert><help>Returns the smaller of two specified numbers</help></el><el type="m"><display>Max(number1, number2)</display><insert>Max(number1, number2)</insert><help>Returns the larger of two specified numbers</help></el><el type="m"><display>Int2Bin(Dec)</display><insert>Int2Bin(Dec)</insert><help>converts a int number to binary</help></el><el type="m"><display>Bin2Int(Num)</display><insert>Bin2Int(Num)</insert><help>converts a binary number to integer</help></el><el type="m"><display>Floor(n)</display><insert>Floor(n)</insert><help>Floor returns the largest integer less than or equal to the given numeric expression</help></el><el type="m"><display>Ceil(dividend, divider)</display><insert>Ceil(dividend, divider)</insert><help>return the largest value when the dividend is divided by divider</help></el><el type="m"><display>modulo(a, b)</display><insert>modulo(a, b)</insert><help></help></el><el type="m"><display>IsPrime(ByRef pLngNumber)</display><insert>IsPrime(ByRef pLngNumber)</insert><help>Checks if a number is prime</help></el><el type="m"><display>Pi()</display><insert>Pi()</insert><help>Calculates PI</help></el><el type="m"><display>between(value, lowerBound, upperBound)</display><insert>between(value, lowerBound, upperBound)</insert><help>checks if a value lies between 2 bounds</help></el></childElements></el><el><display>ColumnFilter</display><insert>&lt;!--#include virtual="/gab_Library/class_menuXP/menuPointXP.asp"--&gt;</insert><childElements><el type="p"><display>target</display><insert>target</insert><help>[string] the name of the frame in which you want to display the site, or "_blank" for a new page</help></el><el type="p"><display>image</display><insert>image</insert><help>[string] the URL of the icon</help></el><el type="p"><display>link</display><insert>link</insert><help>[string] the URL of the target file</help></el><el type="p"><display>title</display><insert>title</insert><help>[string] the display string of the Menu Point</help></el><el type="p"><display>parent</display><insert>parent</insert><help>[string] the parent-menu-item. Leave it blank if this is a Main-Menu Point, otherwise enter the title of the Main-Menu Point</help></el></childElements></el><el><display>MenuXP</display><insert>&lt;!--#include virtual="/gab_Library/class_menuXP/menuXP.asp"--&gt;</insert><childElements><el type="m"><display>addMenuItem(myObject)</display><insert>addMenuItem(myObject)</insert><help>Add`s a menu item.</help></el><el type="m"><display>draw()</display><insert>draw()</insert><help>This method draws the Menu</help></el><el type="p"><display>skin</display><insert>skin</insert><help>SET: [string] menu style</help></el><el type="p"><display>menuStyle</display><insert>menuStyle</insert><help>SET: [string] add your own styles to the menu. It will be placed into the Table style="..."</help></el><el type="p"><display>sorting</display><insert>sorting</insert><help>SET: [bool] set if sorting is on
GET: [bool] is sorting on ?</help></el><el type="p"><display>mainPointAlign</display><insert>mainPointAlign</insert><help>undefined</help></el><el type="p"><display>closeable</display><insert>closeable</insert><help>[bool] - Is it possible to close the MainMenu Points: default=true</help></el><el type="p"><display>defaultStylesheet</display><insert>defaultStylesheet</insert><help>[bool] - Use default styles: default=true?</help></el></childElements></el><el><display>Tree</display><insert>&lt;!--#include virtual="/gab_Library/class_naryTree/naryTree.asp"--&gt;</insert><childElements><el type="m"><display>getChildren(value)</display><insert>getChildren(value)</insert><help></help></el><el type="m"><display>find(nodeValue)</display><insert>find(nodeValue)</insert><help>finds a given node</help></el><el type="m"><display>addNodes(nodesDict)</display><insert>addNodes(nodesDict)</insert><help>adds 0-n nodes to the tree from an (unsorted/sorted) array</help></el><el type="m"><display>addNode(value, parentValue)</display><insert>addNode(value, parentValue)</insert><help>adds a node to the tree.</help></el></childElements></el><el><display>TreeNode</display><insert>&lt;!--#include virtual="/gab_Library/class_naryTree/treeNode.asp"--&gt;</insert><childElements><el type="p"><display>childs</display><insert>childs</insert><help>undefined</help></el><el type="p"><display>value</display><insert>value</insert><help>undefined</help></el></childElements></el><el><display>GeneratePage</display><insert>&lt;!--#include virtual="/gab_Library/class_page/generatepage.asp"--&gt;</insert><childElements><el type="m"><display>checkModalDialog()</display><insert>checkModalDialog()</insert><help></help></el><el type="m"><display>addDebugVar(description, var)</display><insert>addDebugVar(description, var)</insert><help>Adds a variable to the debug-informations.</help></el><el type="m"><display>drawDebugger()</display><insert>drawDebugger()</insert><help></help></el><el type="m"><display>initDebugger()</display><insert>initDebugger()</insert><help></help></el><el type="m"><display>isUserLoggedIn()</display><insert>isUserLoggedIn()</insert><help>Checks if user is logged in or not</help></el><el type="m"><display>loadStylesheetFile(url, media)</display><insert>loadStylesheetFile(url, media)</insert><help>Loads a specified stylesheet-file</help></el><el type="m"><display>loadJavascriptFile(url)</display><insert>loadJavascriptFile(url)</insert><help>Loads a specified javscript-file</help></el><el type="m"><display>loadJSCore()</display><insert>loadJSCore()</insert><help>Loads a the javascript core which is used within each page</help></el><el type="m"><display>drawPageHeader()</display><insert>drawPageHeader()</insert><help></help></el><el type="m"><display>drawDevWarning()</display><insert>drawDevWarning()</insert><help></help></el><el type="m"><display>drawMaintenanceWarning()</display><insert>drawMaintenanceWarning()</insert><help></help></el><el type="m"><display>destruct()</display><insert>destruct()</insert><help></help></el><el type="m"><display>drawCustomFooter()</display><insert>drawCustomFooter()</insert><help></help></el><el type="m"><display>drawCustomHeader()</display><insert>drawCustomHeader()</insert><help></help></el><el type="m"><display>drawPageFooter()</display><insert>drawPageFooter()</insert><help></help></el><el type="m"><display>drawContent()</display><insert>drawContent()</insert><help></help></el><el type="m"><display>setHTTPHeader()</display><insert>setHTTPHeader()</insert><help></help></el><el type="m"><display>closeDatabaseConnection()</display><insert>closeDatabaseConnection()</insert><help></help></el><el type="m"><display>checkAccess()</display><insert>checkAccess()</insert><help></help></el><el type="m"><display>openDatabaseConnection()</display><insert>openDatabaseConnection()</insert><help></help></el><el type="m"><display>checkFramesetter()</display><insert>checkFramesetter()</insert><help></help></el><el type="m"><display>checkLogin()</display><insert>checkLogin()</insert><help></help></el><el type="m"><display>hasAccessOnMaintenance()</display><insert>hasAccessOnMaintenance()</insert><help>is the site accessible due to all maintenance rules?</help></el><el type="m"><display>checkMaintenanceWork()</display><insert>checkMaintenanceWork()</insert><help></help></el><el type="m"><display>showAccessDenied()</display><insert>showAccessDenied()</insert><help>Redirects you to the access denied page</help></el><el type="m"><display>isPostback()</display><insert>isPostback()</insert><help>Returns wheather the page was already sent to server or not.</help></el><el type="m"><display>draw()</display><insert>draw()</insert><help>Draws the page. Beware :)</help></el><el type="p"><display>loginRequired</display><insert>loginRequired</insert><help>SET: [bool] Sets if the page needs a logged-in user to be showed or not?
GET: [bool] Returns if the user need to be logged in to view this page.</help></el><el type="p"><display>title</display><insert>title</insert><help>SET: [string] Sets the page-Title
GET: [string] Gets the page-Title</help></el><el type="p"><display>maintenanceSite</display><insert>maintenanceSite</insert><help>GET: [string] Returns the url of the maintenanceSite</help></el><el type="p"><display>dev_warning_message</display><insert>dev_warning_message</insert><help>GET: [string] Returns the message which should be showed when on development-server</help></el><el type="p"><display>maintenanceWarningMSG</display><insert>maintenanceWarningMSG</insert><help>GET: [string] Returns the message which should be showed when access during maintenance-work.</help></el><el type="p"><display>access_denied_url</display><insert>access_denied_url</insert><help>GET: [string] Returns the url of the page which should be shown if the user has no access to the page</help></el><el type="p"><display>charset</display><insert>charset</insert><help>[string] default = utf-8</help></el><el type="p"><display>contentType</display><insert>contentType</insert><help>[string] the contenttype of the page. by default its the default of response.contentType (text/html).
e.g. When setting isXML to true contenttype is set to text/xml automatically</help></el><el type="p"><display>plain</display><insert>plain</insert><help>[bool] should a plain page be generated? that means that just the stuff from main()-method will be rendered.
no html-, body-, etc tags are rendered out. useful for Ajax requests which use the HTML of a given page. default = false</help></el><el type="p"><display>loadPrototypeJS</display><insert>loadPrototypeJS</insert><help>[bool] loads the protype.js library (http://www.prototypejs.org). default = false
for the documentation of the library refer to their website. it eases the JS development and allows easy
work with AJAX technology</help></el><el type="p"><display>onlyWebDev</display><insert>onlyWebDev</insert><help>[bool] is this page accessible only for webdevs? use this if page is sensitive. default = false</help></el><el type="p"><display>forceStandardApp</display><insert>forceStandardApp</insert><help>[bool] if on then it forces that the appereance of a standard application will be loaded. default = false
this is useful when creating an application which should use the appereance of a standard application and not the
defined appereance of the customized gabLibrary</help></el><el type="p"><display>metaKeywords</display><insert>metaKeywords</insert><help>[string] description for the page. will be used within the keywords-meta-tag</help></el><el type="p"><display>metaDescription</display><insert>metaDescription</insert><help>[string] description of the page. will be used within the description-meta-tag</help></el><el type="p"><display>isXML</display><insert>isXML</insert><help>[bool] indicates if the page should be rendered as an XML-file. default = false</help></el><el type="p"><display>enableModalStyles</display><insert>enableModalStyles</insert><help>[bool] this will only work in modal dialogs - disables default styles and activates modal.css. default=false</help></el><el type="p"><display>showOnMaintenanceWork</display><insert>showOnMaintenanceWork</insert><help>[bool] does this page should be rendered on maintenance-work? default=false.</help></el><el type="p"><display>maintenanceWork</display><insert>maintenanceWork</insert><help>[bool] maintenance-work on or of. value taken from constants</help></el><el type="p"><display>DBConnectionParameter</display><insert>DBConnectionParameter</insert><help>[string] lib.makeDBConnection works with one parameter. you can use this parameter to initialize the page with another parameter
for your database-connection. usefull when deriving</help></el><el type="p"><display>isModalDialog</display><insert>isModalDialog</insert><help>[bool] is this page a modal dialog. if yes then direct access to the page (without loading in modal) will be denied. default = false</help></el><el type="p"><display>loadTooltips</display><insert>loadTooltips</insert><help>[bool] load the windows xp style balloon tooltips (loads javascript &amp; stylesheet)</help></el><el type="p"><display>loadJavascript</display><insert>loadJavascript</insert><help>[bool] should the page.js be loaded within the page. it includes common javascripts</help></el><el type="p"><display>pageEnterEffectDuration</display><insert>pageEnterEffectDuration</insert><help>[string] e.g: 0.5 - The duration for the pageEffect.</help></el><el type="p"><display>pageEnterEffect</display><insert>pageEnterEffect</insert><help>[bool] enable page-Enter Effect. Only IE. Fade Effect!</help></el><el type="p"><display>devWarning</display><insert>devWarning</insert><help>[bool] display a warning if the page is on development-server.</help></el><el type="p"><display>drawBody</display><insert>drawBody</insert><help>[bool] Should the body be drawn? e.g. if you use frameset then you dont need body</help></el><el type="p"><display>debugMode</display><insert>debugMode</insert><help>[bool] Turn on the debugmode? class_debuggingConsole</help></el><el type="p"><display>buffering</display><insert>buffering</insert><help>[bool] should the output be buffered? if false then e.g. response.redirect does not work. default = true
if turning this off then the all ASP errors which are thrown after some response has been made wont be handled.
this is only important if using the 500-100.asp errorpage</help></el><el type="p" obsolete="1"><display>HTTPHeader</display><insert>HTTPHeader</insert><help>[bool] OBSOLETE! Do you want to write the HTTP Header?</help></el><el type="p"><display>isFrameset</display><insert>isFrameset</insert><help>[bool] is this instance a frameset? this is important because e.g. body-tag is not written, etc. default = false</help></el><el type="p"><display>framesetURL</display><insert>framesetURL</insert><help>[string] if framesetter is used then this is the URL of the frameset which is used to display the page
ideally it should be changed when derriving because each application uses its own frameset (if it uses frames).
default: consts.domain (place a {0} which will be replaced by the url to load in the frameset)</help></el><el type="p"><display>framesetter</display><insert>framesetter</insert><help>[bool] load the page within the frameset if its not in a frameset? default = false</help></el><el type="p"><display>loadCss</display><insert>loadCss</insert><help>[bool] Load the stylesheets or not</help></el><el type="p"><display>bodyAttribute</display><insert>bodyAttribute</insert><help>[string] Give the body an attribute e.g. onload=....</help></el><el type="p"><display>showHeader</display><insert>showHeader</insert><help>[bool] you want to show the custom-header</help></el><el type="p"><display>showFooter</display><insert>showFooter</insert><help>[bool] you want to show the custom-footer</help></el><el type="p"><display>backgroundColor</display><insert>backgroundColor</insert><help>[string] Page-Background-color as Hex. e.g. #FFFFFF</help></el><el type="p"><display>DBConnection</display><insert>DBConnection</insert><help>[bool] do you need a Database-connection?</help></el></childElements></el><el><display>Pageable</display><insert>&lt;!--#include virtual="/gab_Library/class_pageable/pageable.asp"--&gt;</insert><childElements><el type="m"><display>isOnLastPage()</display><insert>isOnLastPage()</insert><help>true if the currentpage is the lastpage</help></el><el type="m"><display>isOnFirstPage()</display><insert>isOnFirstPage()</insert><help>true if the currentpage is the firstpage</help></el><el type="m"><display>hasPreviousPage()</display><insert>hasPreviousPage()</insert><help>true if the is at least one previous page</help></el><el type="m"><display>hasNextPage()</display><insert>hasNextPage()</insert><help>true if there is at least one next page</help></el><el type="m"><display>hasPreviousBlock()</display><insert>hasPreviousBlock()</insert><help>returns true if there is an available previous block with the amount of pages</help></el><el type="m"><display>hasNextBlock()</display><insert>hasNextBlock()</insert><help>returns true if there is an available next block with the amount of pages</help></el><el type="m"><display>page(position)</display><insert>page(position)</insert><help>returns the pagenumber for the wanted position in our pages</help></el><el type="m"><display>perform()</display><insert>perform()</insert><help>performs the paging algorithm. you need to execute this at least once.</help></el><el type="p"><display>dataEndPosition</display><insert>dataEndPosition</insert><help>GET: [int] gets the end position for your data.</help></el><el type="p"><display>dataStartPosition</display><insert>dataStartPosition</insert><help>GET: [int] gets the start position for your data.</help></el><el type="p"><display>firstPage</display><insert>firstPage</insert><help>GET: [int] gets the number of the first page</help></el><el type="p"><display>lastPage</display><insert>lastPage</insert><help>GET: [int] gets the number of the last page</help></el><el type="p"><display>pages</display><insert>pages</insert><help>GET: [array] array including all your pages. available after executing perform()</help></el><el type="p"><display>pageCount</display><insert>pageCount</insert><help>SET: [int] sets the pagecount. you can set it by your own then you dont need to provide recordcount and recordsperpage
GET: [int] returns the pageCount</help></el><el type="p"><display>numberOfPages</display><insert>numberOfPages</insert><help>GET: [int] gets the number of displayed pages
SET: [int] sets the number of displayed page-numbers. even numbers will be round up!</help></el><el type="p"><display>currentPage</display><insert>currentPage</insert><help>GET: [int] gets the current-page
SET: [int] sets the current-page</help></el><el type="p"><display>recordsPerPage</display><insert>recordsPerPage</insert><help>[int] how many records do you display per page?</help></el><el type="p"><display>recordCount</display><insert>recordCount</insert><help>[int] the number of all records; if you don´t know the max. number of records you can
set the pageCount directly (recordCount has to be 0 (default))</help></el></childElements></el><el><display>ReportCell</display><insert>&lt;!--#include virtual="/gab_Library/class_report/class_ReportCell.asp"--&gt;</insert><childElements><el type="m"><display>valueIsUndefined()</display><insert>valueIsUndefined()</insert><help>indicates if the stored value is undefined or not</help></el><el type="m"><display>draw(isLastCol, isLastRow)</display><insert>draw(isLastCol, isLastRow)</insert><help>draws the cell</help></el><el type="p"><display>value</display><insert>value</insert><help>SET: [float] sets the value. when its not a number then it will be set to 0. undefined is accepted as well.</help></el><el type="p"><display>default property get value</display><insert>default property get value</insert><help>[float] gets the value which is held by the cell</help></el><el type="p"><display>param</display><insert>param</insert><help>[ReportParameter] the parameter which was used to get the value</help></el><el type="p"><display>attributes</display><insert>attributes</insert><help>[string] attributes of the cell</help></el><el type="p"><display>col</display><insert>col</insert><help>[ReportParameter] the column to which the cell belongs to</help></el><el type="p"><display>row</display><insert>row</insert><help>[ReportParameter] the row to which the cell belongs to</help></el><el type="p"><display>report</display><insert>report</insert><help>[Report] report which the cell belongs to</help></el></childElements></el><el><display>ReportParameter</display><insert>&lt;!--#include virtual="/gab_Library/class_report/class_reportParameter.asp"--&gt;</insert><childElements><el type="m"><display>hasFormula()</display><insert>hasFormula()</insert><help>indicates if the value holds a formula or not. if empty then it does not hold one ;)</help></el><el type="p"><display>digitsAfterDecimal</display><insert>digitsAfterDecimal</insert><help>[int] number of the digits when formating the number. by default its
taken from the report property</help></el><el type="p"><display>priority</display><insert>priority</insert><help>[bool] indicates if this parameter has priority when it comes to a colision between section and parameter. default = false</help></el><el type="p"><display>index</display><insert>index</insert><help>[int] index of the parameter. starting with 0</help></el><el type="p"><display>border</display><insert>border</insert><help>[string] which border should be applied to the parameter. left, right, top, bottom (and all combinations)
example: "top bottom left right" would draw a border around the whole parameter</help></el><el type="p"><display>name</display><insert>name</insert><help>[string] name of the parameter which is used within formulas. if you need
to refer to this parameter within a formula then you must provide a name</help></el><el type="p"><display>caption</display><insert>caption</insert><help>[string] caption which will be displayed for the field</help></el><el type="p"><display>value</display><insert>value</insert><help>[string] value of the field.
The name of a column which can be found in the recordset generated by the sql of the Report.
if value starts with "=" then a formula will be applied to the field. example: ={a}+{b}
means that the parameter with named "a" will be added to the parameter name "b".
Formula usage:
{} = value of the parameter with the name between the brackets
[] = these brackets mean that the value between is a function. supported functions yet (SUM, AVG)</help></el></childElements></el><el><display>Report</display><insert>&lt;!--#include virtual="/gab_Library/class_report/report.asp"--&gt;</insert><childElements><el type="m"><display>write(val)</display><insert>write(val)</insert><help>writes something to the output</help></el><el type="m"><display>addCol(aCol)</display><insert>addCol(aCol)</insert><help>adds a column</help></el><el type="m"><display>addRow(aRow)</display><insert>addRow(aRow)</insert><help>adds a row</help></el><el type="m"><display>draw()</display><insert>draw()</insert><help>draws the report</help></el><el type="p"><display>ID</display><insert>ID</insert><help>GET: [string] gets the auto generated ID of the report</help></el><el type="p"><display>digitsAfterDecimal</display><insert>digitsAfterDecimal</insert><help>[int] how many digits should be displayed after the decimal. thats also the precision which will be
used for the calculations. default = 2</help></el><el type="p"><display>onCellCreated</display><insert>onCellCreated</insert><help>[string] name of the sub which should handle the onCellCreated-event</help></el><el type="p"><display>swapAxes</display><insert>swapAxes</insert><help>[bool] NOT IMPLEMENTED YET! swaps the parameters and cols. so parameters are columns and cols are rows. default  = false</help></el><el type="p"><display>undefinedSign</display><insert>undefinedSign</insert><help>[string] the sign (value) which will be shown if a value is undefined. happens on division by zero</help></el><el type="p"><display>cellspacing</display><insert>cellspacing</insert><help>[int] spacing of the cells within the report</help></el><el type="p"><display>cellpadding</display><insert>cellpadding</insert><help>[int] padding of the cells within the report</help></el><el type="p"><display>align</display><insert>align</insert><help>[string] alignment of the report. default = center</help></el><el type="p"><display>width</display><insert>width</insert><help>[string] width of the report. value is put into the width-attribute of the table. default = 80%</help></el><el type="p"><display>stringBuilder</display><insert>stringBuilder</insert><help>[bool] should the stringbuilder be used for rendering? default = true</help></el><el type="p"><display>cssLocation</display><insert>cssLocation</insert><help>[string] full virtual path to the stylesheet file. default = take from the config.asp</help></el><el type="p"><display>groupBy</display><insert>groupBy</insert><help>[string] name of the field by which the cols/rows should be grouped. by default the
the grouping will be done over the columns. if axes are swaped then grouping will be done
over the rows</help></el><el type="p"><display>title</display><insert>title</insert><help>[string] title of the report. empty if no title. default = empty</help></el><el type="p"><display>datasource</display><insert>datasource</insert><help>[string], [recordset] the datasource which is needed to generate the report.
normally grouped with the GROUPED BY clause. if string is given then it will be treated
as a SQL-Query which after executing the draw() method will change to a recordset.</help></el></childElements></el><el><display>RSSItem</display><insert>&lt;!--#include virtual="/gab_Library/class_RSS/class_RSSItem.asp"--&gt;</insert><childElements><el type="p"><display>link</display><insert>link</insert><help>[string] link to the item</help></el><el type="p"><display>description</display><insert>description</insert><help>[string] content</help></el><el type="p"><display>title</display><insert>title</insert><help>[string] title of the item</help></el></childElements></el><el><display>RSS</display><insert>&lt;!--#include virtual="/gab_Library/class_RSS/RSS.asp"--&gt;</insert><childElements><el type="m"><display>setCache(interval, value)</display><insert>setCache(interval, value)</insert><help>sets the caching of the RSS. the Cache class needs to be loaded for this</help></el><el type="m"><display>load()</display><insert>load()</insert><help>loads the feed. so the items, title, link, etc. will be set</help></el><el type="m"><display>draw(xslPath)</display><insert>draw(xslPath)</insert><help>draws the RSS feed with a given XSL. if cached then it will be taken from the cache</help></el><el type="p"><display>timeout</display><insert>timeout</insert><help>[int] timeout in seconds for the requests. default = 2</help></el><el type="p"><display>debuging</display><insert>debuging</insert><help>[bool] turns debuging on/off. if on then useful information will be shown which can be used
if the feed never loads. e.g. the response of the server, etc. default = false</help></el><el type="p"><display>theCache</display><insert>theCache</insert><help>[Cache] holds the cache which is used for caching the feed. by default it is nothing and
should only be set by setCache(). afterwards this property can be used.</help></el><el type="p"><display>items</display><insert>items</insert><help>[dictionary] collection of the items (RSSItem). after getItems() these get filled
when writing a RSSfeed this collection needs to be filled the items which sould be published.</help></el><el type="p"><display>description</display><insert>description</insert><help>[string] description of the feed</help></el><el type="p"><display>link</display><insert>link</insert><help>[string] link which is associated with the link</help></el><el type="p"><display>title</display><insert>title</insert><help>[string] title of the feed</help></el><el type="p"><display>failed</display><insert>failed</insert><help>[bool] indicates if the request of the RSSFeed failed. e.g. due to server not responding,
or url does not exists, etc. useful to call after draw() or getItems(). if true then
some error happend due requesting and a nice errormessage can be shown to the user</help></el><el type="p"><display>url</display><insert>url</insert><help>[string] url of the RSS feed</help></el></childElements></el><el><display>Sort</display><insert>&lt;!--#include virtual="/gab_Library/class_sort/sort.asp"--&gt;</insert><childElements><el type="m"><display>SortDict(objDict, orderBez, sortMode)</display><insert>SortDict(objDict, orderBez, sortMode)</insert><help>Orders a dictionary object by one or two dictionary attributes. For example, if you have
a dictionary with the attributes .name, .title, .color you can say you want to order the
dict by "title, name". The function will return a sorted dictionary (ordered by the key).
Note: Dictionary key has to start with 0 !! and have to be increased by 1 !!!</help></el><el type="m"><display>sort()</display><insert>sort()</insert><help>performs the sort</help></el><el type="p"><display>sourceType</display><insert>sourceType</insert><help>SET: undefined
GET: undefined</help></el><el type="p"><display>sortOrder</display><insert>sortOrder</insert><help>SET: [bool] - Ascending?</help></el><el type="p"><display>column</display><insert>column</insert><help>SET: undefined
GET: undefined</help></el><el type="p"><display>source</display><insert>source</insert><help>SET: Sets the source to sort
GET: Returns the source</help></el><el type="p"><display>sortType</display><insert>sortType</insert><help>SET: Sets the SortType. Needs a value 1,2,4,8,etc.
GET: Gets the SortType</help></el></childElements></el><el><display>SortMethod</display><insert>&lt;!--#include virtual="/gab_Library/class_sort/sortMethod.asp"--&gt;</insert><childElements><el type="m"><display>shuffleSort(arObj)</display><insert>shuffleSort(arObj)</insert><help>this is a special sort alogrithm for arrays, if you want to
randomize the values (with repeating or without) of your array</help></el><el type="m"><display>columnSort(arObj)</display><insert>columnSort(arObj)</insert><help>this is a special sort alogrithm only for tables. It can be used to order tables
by their columns.
For example, if you have a presorted array and you want to insert these values
into a table with "n" columns, this function will return you an ordered array where the
values are sorted by the table columns</help></el><el type="m"><display>bubbleSort2(arrvar)</display><insert>bubbleSort2(arrvar)</insert><help>sorts a 2 dimensional array with the bubble sort method</help></el><el type="m"><display>bubbleSort(arrvar)</display><insert>bubbleSort(arrvar)</insert><help>sorts an array with the bubble sort method.</help></el><el type="p"><display>int_sortcolumn</display><insert>int_sortcolumn</insert><help>undefined</help></el><el type="p"><display>ascending</display><insert>ascending</insert><help>undefined</help></el></childElements></el><el><display>Spinner</display><insert>&lt;!--#include virtual="/gab_Library/class_spinner/spinner.asp"--&gt;</insert><childElements><el type="p"><display>toString</display><insert>toString</insert><help>GET: wont work yet</help></el><el type="m"><display>draw(spin_ID, startValue)</display><insert>draw(spin_ID, startValue)</insert><help></help></el><el type="p"><display>enableMouseWheel</display><insert>enableMouseWheel</insert><help>[bool] allows you to change the spinner using the mouse wheel (default = true)</help></el><el type="p"><display>onchange</display><insert>onchange</insert><help>[string] here you can add a javascript call which will be executed on-spinner-change</help></el><el type="p"><display>maxLength</display><insert>maxLength</insert><help>[int] the maximum allowed length of the value-field</help></el><el type="p"><display>width</display><insert>width</insert><help>[int] width in pixel of the control. default = 100</help></el><el type="p"><display>readOnly</display><insert>readOnly</insert><help>[bool] disable editing of the spinBox. default = false</help></el><el type="p"><display>styleAttribute</display><insert>styleAttribute</insert><help>[string] modify the style attributes</help></el><el type="p"><display>looping</display><insert>looping</insert><help>[bool] allow repeating if true (works only if min or max != 0). default = on</help></el><el type="p"><display>integerPlaces</display><insert>integerPlaces</insert><help>[int] fills the number from left with zero's, e.g. 3 =&gt; 000, 050, 075, 100</help></el><el type="p"><display>decimalPlaces</display><insert>decimalPlaces</insert><help>[int] rounds to the number of places and fills up with 0 if needed</help></el><el type="p"><display>step</display><insert>step</insert><help>[int/float(string)] the increment value; if you use a floatingpoint number type it as string</help></el><el type="p"><display>maximum</display><insert>maximum</insert><help>[int] the maximum-value</help></el><el type="p"><display>minimum</display><insert>minimum</insert><help>[int] the minimum-value</help></el><el type="p"><display>skin</display><insert>skin</insert><help>[enum-skin] which skin should be used for the control</help></el><el type="p"><display>controlItems</display><insert>controlItems</insert><help>[array] an array with your custom items which should be spinned around. works only if controlType is set to custom</help></el><el type="p"><display>controlType</display><insert>controlType</insert><help>[enum-controltype] is it a numeric spinner or a custom spinner (e.g. with strings, etc.)</help></el><el type="p"><display>orientation</display><insert>orientation</insert><help>[enum-orientation] what orientation of the spinner? ORIENTATION_LEFTRIGHT or ORIENTATION_TOPDOWN</help></el><el type="p" obsolete="1"><display>firstInstance</display><insert>firstInstance</insert><help>[bool] OBSOLETE! determines if this instance is the first on the page.
 Its needed for the javascripts &amp; stylesheet initialization</help></el></childElements></el><el><display>StringOperations</display><insert>str</insert><childElements><el type="m"><display>ASCIICode(str)</display><insert>ASCIICode(str)</insert><help>Encodes a string into ASCII Characters</help></el><el type="m"><display>format(str, arr)</display><insert>format(str, arr)</insert><help>Replaces all {n} values in a given string through the n-index field of an array.</help></el><el type="m"><display>capitalize(inputStr)</display><insert>capitalize(inputStr)</insert><help>Makes every first letter of every word to upper-case.</help></el><el type="m"><display>swapCase(str)</display><insert>swapCase(str)</insert><help>Swaps the Case of a String. Lower to Upper and vice a versa</help></el><el type="m"><display>isAlphabetic(character)</display><insert>isAlphabetic(character)</insert><help>Checks if a char is an alphabetic character or not. A-Z or a-z</help></el><el type="m"><display>trimString(str, stringToTrim)</display><insert>trimString(str, stringToTrim)</insert><help>Removes characters from a given string with all occurencies of a matching string</help></el><el type="m"><display>trimEnd(str, n)</display><insert>trimEnd(str, n)</insert><help>Removes characters from the end of a string</help></el><el type="m"><display>trimStart(str, n)</display><insert>trimStart(str, n)</insert><help>Removes characters from the begin of a string</help></el><el type="m"><display>clone(str, n)</display><insert>clone(str, n)</insert><help>Concats a string "n" times</help></el><el type="m"><display>endsWith(str, chars)</display><insert>endsWith(str, chars)</insert><help>Checks if the string ends with ...</help></el><el type="m"><display>startsWith(str, chars)</display><insert>startsWith(str, chars)</insert><help>Checks if the string begins with ...</help></el><el type="m"><display>multiArrayToString(arr, seperator, dimension)</display><insert>multiArrayToString(arr, seperator, dimension)</insert><help>Converts a part of a multidimensional array to a string</help></el><el type="m"><display>arrayToString(arr, seperator)</display><insert>arrayToString(arr, seperator)</insert><help>Converts an array to a string</help></el><el type="m"><display>toCharArray(str)</display><insert>toCharArray(str)</insert><help>Converts a string to a "char" array</help></el><el type="m"><display>writeln(value)</display><insert>writeln(value)</insert><help>writes a line to the output</help></el><el type="m"><display>write(value)</display><insert>write(value)</insert><help>writes a string to the output in the same line</help></el><el type="m"><display>ensureSlash(pathString)</display><insert>ensureSlash(pathString)</insert><help>adds a slash "/" at the end of the string if there isnt one.</help></el><el type="m"><display>splitValue(stringToSplit, delimiter, returnIndex)</display><insert>splitValue(stringToSplit, delimiter, returnIndex)</insert><help>splits a string and returns a specified field of the array</help></el><el type="m"><display>shorten(str, maxChars, overflowString)</display><insert>shorten(str, maxChars, overflowString)</insert><help>shortens a string and adds a custom string at the end if string is longer than a given value.</help></el><el type="m"><display>end()</display><insert>[end]()</insert><help>stops to response</help></el><el type="m"><display>divide(inputStr, partitionLength)</display><insert>divide(inputStr, partitionLength)</insert><help>divides a string into several string-paritions of a given length</help></el><el type="m"><display>stripTags(inputStr)</display><insert>stripTags(inputStr)</insert><help>removes all Tags from a given string</help></el><el type="m"><display>trimComplete(inputStr)</display><insert>trimComplete(inputStr)</insert><help>removes all non-printable chars from the end and the beginning of the string</help></el><el type="m"><display>nullIfEmpty(value)</display><insert>nullIfEmpty(value)</insert><help>returns null if the input is empty.</help></el><el type="m"><display>NAIfEmpty(txt)</display><insert>NAIfEmpty(txt)</insert><help>provides "N/A" if the field beeing passed equals empty</help></el><el type="m"><display>isValidEmail(value)</display><insert>isValidEmail(value)</insert><help>checks if a given string is a syntactically valid email</help></el><el type="m"><display>HTMLEncode(value)</display><insert>HTMLEncode(value)</insert><help>encodes a value so that any special chars will be transformed into html entities.
e.g. " will be &amp;quot;</help></el><el type="m"><display>writeEnd(value)</display><insert>writeEnd(value)</insert><help>writes a value to the output and stops the response.</help></el><el type="m"><display>getHiddenInput(name, value)</display><insert>getHiddenInput(name, value)</insert><help>generates a hidden input field and returns the HTML for it</help></el><el type="m"><display>writeDebug(value)</display><insert>writeDebug(value)</insert><help>writes a value to the output.
Note: will only be executed on the development server</help></el><el type="m"><display>JSEncode(val)</display><insert>JSEncode(val)</insert><help></help></el><el type="m"><display>SQLSafe(value)</display><insert>SQLSafe(value)</insert><help>makes a given string safe for the use within sql statements</help></el><el type="m"><display>defuseHTML(value)</display><insert>defuseHTML(value)</insert><help>defuses the HTML of  given string. so html code wont be recognized as HTML code by browser</help></el><el type="m"><display>padRight(value, totalLength, paddingChar)</display><insert>padRight(value, totalLength, paddingChar)</insert><help>left-aligns a given value by padding right a given character to a totalsize</help></el><el type="m"><display>padLeft(value, totalLength, paddingChar)</display><insert>padLeft(value, totalLength, paddingChar)</insert><help>right-aligns a given value by padding left a given character to a totalsize</help></el><el type="m"><display>toInt(value, alternative)</display><insert>toInt(value, alternative)</insert><help>takes a string and tries to convert it to an integer. if converting not possible then an
alternative value will be taken</help></el><el type="m"><display>toFloat(value, alternative)</display><insert>toFloat(value, alternative)</insert><help>takes a string and tries to convert it to a float. if converting not possible then an
alternative value will be taken</help></el></childElements></el><el><display>Tab</display><insert>&lt;!--#include virtual="/gab_Library/class_tabs/class_tab.asp"--&gt;</insert><childElements><el type="m"><display>draw(active, ID, attribute, QSnotUse)</display><insert>draw(active, ID, attribute, QSnotUse)</insert><help>Draws one tab</help></el><el type="p"><display>attributes</display><insert>attributes</insert><help>GET: [string] gets the attributes of the tab
SET: [string] sets the attributes of the tab (button-tag)</help></el><el type="p"><display>onClick</display><insert>onClick</insert><help>SET: [string] sets the onclick attribute. if you overwrite the value then auto-postback is disabled.</help></el><el type="p"><display>alwaysClickable</display><insert>alwaysClickable</insert><help>[bool] if true the selected tab will not be disabled. default = false</help></el><el type="p"><display>disabled</display><insert>disabled</insert><help>[bool] indicates wheater the tab is disabled or not. default = false</help></el><el type="p"><display>show</display><insert>show</insert><help>[bool] do you want to show the tab? default = true</help></el><el type="p"><display>procedure</display><insert>procedure</insert><help>[string] The name of the procedure which should be called when clicking on the tab</help></el><el type="p"><display>caption</display><insert>caption</insert><help>[string] Value to display on the Tab.</help></el></childElements></el><el><display>Tabs</display><insert>&lt;!--#include virtual="/gab_Library/class_tabs/tabs.asp"--&gt;</insert><childElements><el type="m"><display>draw()</display><insert>draw()</insert><help>Draws the tabs-control</help></el><el type="m"><display>default(defObject)</display><insert>default(defObject)</insert><help>Specifies the default tab. Optional!</help></el><el type="m"><display>addTab(tabObject)</display><insert>addTab(tabObject)</insert><help>Adds a tab-object to your tabs-control</help></el><el type="p"><display>selectedTab</display><insert>selectedTab</insert><help>GET: [int] index of the selected tab. first = 1. 0 if no selected</help></el><el type="p"><display>defaultSelectedTabIndex</display><insert>defaultSelectedTabIndex</insert><help>SET: [int] index of the selected tab-index by default</help></el><el type="p"><display>CSSLocation</display><insert>CSSLocation</insert><help>[string] location to the stylesheetfile.</help></el><el type="p"><display>printable</display><insert>printable</insert><help>[bool] should the tabs appear on printouts? default = false</help></el><el type="p"><display>QSnotUse</display><insert>QSnotUse</insert><help>[string] Querystring-fields you dont want to take with you on postback. if you have more than one then just seperate with comma</help></el><el type="p"><display>addProcedure</display><insert>addProcedure</insert><help>[string] Name of procedure. Do you want to exectue a procedure directly beside the tabs?</help></el><el type="p"><display>attribute</display><insert>attribute</insert><help>[string] An attribute for everyTab. e.g. style="width:200px;"</help></el></childElements></el><el><display>TextTemplateBlock</display><insert>&lt;!--#include virtual="/gab_Library/class_textTemplate/class_TextTemplateBlock.asp"--&gt;</insert><childElements><el type="m"><display>addItem(vars)</display><insert>addItem(vars)</insert><help>Adds an item to the block</help></el><el type="p"><display>items</display><insert>items</insert><help>[dictionary] items of the block. key = autoID, value = array with vars.</help></el></childElements></el><el><display>TextTemplate</display><insert>&lt;!--#include virtual="/gab_Library/class_textTemplate/TextTemplate.asp"--&gt;</insert><childElements><el type="m"><display>delete()</display><insert>delete()</insert><help>Deeltes the text template</help></el><el type="m"><display>save()</display><insert>save()</insert><help>Saves the text template to the template directory</help></el><el type="m"><display>getAllButFirstLine()</display><insert>getAllButFirstLine()</insert><help>Returns the parsed file without the first line</help></el><el type="m"><display>getFirstLine()</display><insert>getFirstLine()</insert><help>Returns the first line of the template file</help></el><el type="m"><display>returnString()</display><insert>returnString()</insert><help>Returns a string where the template and the placeholders are merged</help></el><el type="m"><display>addVariable(varName, varValue)</display><insert>addVariable(varName, varValue)</insert><help>Adds a variable which should be replaced</help></el><el type="p"><display>content</display><insert>content</insert><help>SET: [string] Provide your own content.
GET: [string] If no content is provided, we load the conents of the given file</help></el><el type="p"><display>cleanParse</display><insert>cleanParse</insert><help>[bool] should all unused blocks, vars, etc. been removed after parsing? default = true</help></el><el type="p"><display>customLineBreak</display><insert>customLineBreak</insert><help>You need a custom line-break? e.g. chr(13) or vbcrlf, etc.</help></el><el type="p"><display>placeHolderEnd</display><insert>placeHolderEnd</insert><help>If you want to use your own placeholder characters. this is the ending. e.g. &gt;&gt;&gt;</help></el><el type="p"><display>placeHolderBegin</display><insert>placeHolderBegin</insert><help>If you want to use your own placeholder characters. this is the beginning. e.g. &lt;&lt;&lt;</help></el><el type="p"><display>fileName</display><insert>fileName</insert><help>The filename of your template.</help></el></childElements></el><el><display>TreeviewGroup</display><insert>&lt;!--#include virtual="/gab_Library/class_treeview/class_treeviewGroup.asp"--&gt;</insert><childElements><el type="p"><display>treeview</display><insert>treeview</insert><help>[dropdown] instance of the treeview the group belongs to</help></el><el type="p"><display>textFieldname</display><insert>textFieldname</insert><help>[string] name of the field which holds the text of the group</help></el><el type="p"><display>IDFieldname</display><insert>IDFieldname</insert><help>[string] name of the field which holds the ID of the group</help></el></childElements></el><el><display>Treeview</display><insert>&lt;!--#include virtual="/gab_Library/class_treeview/treeview.asp"--&gt;</insert><childElements><el type="m"><display>draw()</display><insert>draw()</insert><help>draws the control</help></el><el type="m"><display>getNewGroup(IDFieldname, textFieldname)</display><insert>getNewGroup(IDFieldname, textFieldname)</insert><help>gets a new Group with the wanted parameters. useful as input for the addGroup()-method</help></el><el type="m"><display>addGroup(groupObj)</display><insert>addGroup(groupObj)</insert><help>adds a group. need to be done before draw()-ing</help></el><el type="p"><display>ID</display><insert>ID</insert><help>[string] ID of the control</help></el><el type="p"><display>groups</display><insert>groups</insert><help>[Dictionary] the groups collection</help></el><el type="p"><display>defaultStyles</display><insert>defaultStyles</insert><help>[bool] load the default styles for the control? default = true</help></el><el type="p"><display>datasource</display><insert>datasource</insert><help>[ADODB-Recordset] your data</help></el></childElements></el><el><display>Validateable</display><insert>&lt;!--#include virtual="/gab_Library/class_validateable/validateable.asp"--&gt;</insert><childElements><el type="m"><display>getErrorSummary(overallPrefix, overallPostfix, itemPrefix, itemPostfix)</display><insert>getErrorSummary(overallPrefix, overallPostfix, itemPrefix, itemPostfix)</insert><help></help></el><el type="m"><display>addInvalidField(fieldName, errorDescription)</display><insert>addInvalidField(fieldName, errorDescription)</insert><help></help></el><el type="m"><display>isValid()</display><insert>isValid()</insert><help></help></el><el type="m"><display>fieldIsInvalid(fieldName)</display><insert>fieldIsInvalid(fieldName)</insert><help></help></el><el type="m"><display>getInvalidDescriptionFor(fieldName)</display><insert>getInvalidDescriptionFor(fieldName)</insert><help></help></el><el type="m"><display>getInvalidData()</display><insert>getInvalidData()</insert><help></help></el><el type="p"><display>dictInvalidData</display><insert>dictInvalidData</insert><help>undefined</help></el></childElements></el><el><display>WebserviceParameter</display><insert>&lt;!--#include virtual="/gab_Library/class_webservice/class_webserviceParameter.asp"--&gt;</insert><childElements><el type="p"><display>dataType</display><insert>dataType</insert><help>SET: [string] sets the type of the parameter.
GET: [string] gets the type of the parameter. supported: bool, string, int. default = string</help></el><el type="p"><display>description</display><insert>description</insert><help>[string] verbal description of the parameter</help></el><el type="p"><display>defaultValue</display><insert>defaultValue</insert><help>[string] the default value which will be used if its an optional parameter</help></el><el type="p"><display>name</display><insert>name</insert><help>[string] name of the parameter</help></el></childElements></el><el><display>Webservice</display><insert>&lt;!--#include virtual="/gab_Library/class_webservice/webservice.asp"--&gt;</insert><childElements><el type="m"><display>consume(requestedUrl, requestMethod, inputParams, timoutAfter)</display><insert>consume(requestedUrl, requestMethod, inputParams, timoutAfter)</insert><help>consumes a given webservice which was created with the webservice class</help></el><el type="m"><display>addCustomError(errMessage)</display><insert>addCustomError(errMessage)</insert><help>you can add custom-errors. e.g if something fails you want to display an error</help></el><el type="m"><display>getNewNode(name, value)</display><insert>getNewNode(name, value)</insert><help>gets a new node of the tree</help></el><el type="m"><display>addParam(param)</display><insert>addParam(param)</insert><help>adds a parameter to the input parameters list of the webservice</help></el><el type="m"><display>generate()</display><insert>generate()</insert><help>generates the webservice</help></el><el type="p"><display>ERRCODE_MAINTENANCE</display><insert>ERRCODE_MAINTENANCE</insert><help>GET: [int] get error-code if the page is on maintenance</help></el><el type="p" obsolete="1"><display>ERRCODE_INVALIDXML</display><insert>ERRCODE_INVALIDXML</insert><help>GET: [int] OBSOLETE! used in older versions.</help></el><el type="p"><display>ERRCODE_UNEXPECTED</display><insert>ERRCODE_UNEXPECTED</insert><help>GET: [int] gets error-code if any unexpected ASP error happens</help></el><el type="p" obsolete="1"><display>ERRCODE_WRONGHOST</display><insert>ERRCODE_WRONGHOST</insert><help>GET: [int] OBSOLETE! used to indicate that the webservice has been executed on the wrong host.</help></el><el type="p"><display>ERRCODE_CUSTOM</display><insert>ERRCODE_CUSTOM</insert><help>GET: [int] gets the error-code for custom-errors</help></el><el type="p"><display>DBConnection</display><insert>DBConnection</insert><help>SET: undefined</help></el><el type="p"><display>onlyWebDev</display><insert>onlyWebDev</insert><help>SET: undefined</help></el><el type="p"><display>DBConnectionParameter</display><insert>DBConnectionParameter</insert><help>SET: undefined</help></el><el type="p"><display>params</display><insert>params</insert><help>[webserviceParameter] collection of the parameters the webservice can approach</help></el><el type="p"><display>url</display><insert>url</insert><help>[string] url. set automatically when creating</help></el><el type="p"><display>name</display><insert>name</insert><help>[string] name of the webservice. set automatically when creating.</help></el><el type="p"><display>description</display><insert>description</insert><help>[string] a verbal description of the webservice. what does it do</help></el><el type="p"><display>method</display><insert>method</insert><help>[string] the method which should be used to call the webservice (POST or GET). default = post</help></el><el type="p"><display>errorHandling</display><insert>errorHandling</insert><help>[bool] disable/enable error handling. good for development. default = true</help></el><el type="p"><display>XMLDOM</display><insert>XMLDOM</insert><help>[xmldom] the xmldom used within the webservice. and it represents the webservice body.</help></el></childElements></el></elements><types><el name="dat"><type>&lt;!--#include virtual="/gab_Library/class_dates/dates.asp"--&gt;</type></el><el name="table"><type>&lt;!--#include virtual="/gab_Library/class_drawtable/drawtable.asp"--&gt;</type></el><el name="DD"><type>&lt;!--#include virtual="/gab_Library/class_dropdown/dropdown.asp"--&gt;</type></el><el name="fu"><type>&lt;!--#include virtual="/gab_Library/class_fileUpload/fileUpload.asp"--&gt;</type></el><el name="frm"><type>&lt;!--#include virtual="/gab_Library/class_form/form.asp"--&gt;</type></el><el name="page"><type>&lt;!--#include virtual="/gab_Library/class_page/generatepage.asp"--&gt;</type></el><el name="rpt"><type>&lt;!--#include virtual="/gab_Library/class_report/report.asp"--&gt;</type></el><el name="rss"><type>&lt;!--#include virtual="/gab_Library/class_RSS/RSS.asp"--&gt;</type></el><el name="val"><type>&lt;!--#include virtual="/gab_Library/class_validateable/validateable.asp"--&gt;</type></el><el name="WS"><type>&lt;!--#include virtual="/gab_Library/class_webservice/webservice.asp"--&gt;</type></el></types></root>
